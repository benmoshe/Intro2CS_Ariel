<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_dXgncE07EeuDP5XTX0eOOA" name="CS_101">
    <eAnnotations xmi:id="_d4ktIE07EeuDP5XTX0eOOA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_d4oXgE07EeuDP5XTX0eOOA" source="codegen">
        <details xmi:id="_d4qMsE07EeuDP5XTX0eOOA" key="codegenDirectory" value="/CS-101/src"/>
        <details xmi:id="_gzwr4E07EeuDP5XTX0eOOA" key="AssociatedSourceCode" value="/CS-101/src/ex4/Ex4.java;1331336154/1;/CS-101/src/ex4/Ex4_Const.java;554444126/1;/CS-101/src/ex4/Ex4_GUI.java;766955648/1;/CS-101/src/ex4/tests/PointTest.java;3431795686/1;/CS-101/src/ex4/GUI_Shape.java;1720700885/1;/CS-101/src/ex4/GUI_Shape_Collection.java;301590478/1;/CS-101/src/ex4/Shape_Collection.java;270340433/1;/CS-101/src/ex4/Shape_Comp.java;3351862851/1;/CS-101/src/ex4/geometry/GeoShape.java;3036370922/1;/CS-101/src/ex4/geometry/Circle2D.java;3965547477/1;/CS-101/src/ex4/StdDraw.java;2624035953/1;/CS-101/src/ex4/geometry/Point2D.java;4007819471/1;/CS-101/src/ex4/geometry/Rect2D.java;2347539379/1;/CS-101/src/ex4/geometry/Segment2D.java;3733097238/1;/CS-101/src/ex4/geometry/Triangle2D.java;2997168363/1;/CS-101/src/ex4/GUIShape.java;1964899173/1;/CS-101/src/ex4/tests/Test_Ex4.java;3368642747/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_fwXVME07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_fwgfIE07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_fwiUUE07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_fwi7YE07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_fwi7YU07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_fwjicE07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_fwjicU07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_fwjick07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_fwkwkE07EeuDP5XTX0eOOA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_fwuhkE07EeuDP5XTX0eOOA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_fwvvsE07EeuDP5XTX0eOOA" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_fzNN0E07EeuDP5XTX0eOOA" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_gPTT8E07EeuDP5XTX0eOOA" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gPUiEE07EeuDP5XTX0eOOA" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPVJIE07EeuDP5XTX0eOOA" name="MouseEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gPVJIk07EeuDP5XTX0eOOA" name="MouseListener"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gPWXQU07EeuDP5XTX0eOOA" name="MouseMotionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPW-UU07EeuDP5XTX0eOOA" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_gPW-U007EeuDP5XTX0eOOA" name="KeyListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_fzN04E07EeuDP5XTX0eOOA" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_gPXlYU07EeuDP5XTX0eOOA" name="Arc2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPXlY007EeuDP5XTX0eOOA" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPYMcU07EeuDP5XTX0eOOA" name="GeneralPath"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPYzgU07EeuDP5XTX0eOOA" name="Line2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPYzg007EeuDP5XTX0eOOA" name="Rectangle2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_fzOb8E07EeuDP5XTX0eOOA" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_gPZakU07EeuDP5XTX0eOOA" name="BufferedImage"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPZak007EeuDP5XTX0eOOA" name="DirectColorModel"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_gPaBoU07EeuDP5XTX0eOOA" name="WritableRaster"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_gM_m0E07EeuDP5XTX0eOOA" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPEDYE07EeuDP5XTX0eOOA" name="BasicStroke"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPF4kE07EeuDP5XTX0eOOA" name="FileDialog"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPIU0E07EeuDP5XTX0eOOA" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPJi8E07EeuDP5XTX0eOOA" name="FontMetrics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPL_ME07EeuDP5XTX0eOOA" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPMmQE07EeuDP5XTX0eOOA" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPQ3sU07EeuDP5XTX0eOOA" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPSF0U07EeuDP5XTX0eOOA" name="RenderingHints"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPSF0007EeuDP5XTX0eOOA" name="Toolkit"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_fygDME07EeuDP5XTX0eOOA" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_gOeNgE07EeuDP5XTX0eOOA" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOnXcE07EeuDP5XTX0eOOA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOteEE07EeuDP5XTX0eOOA" name="Scanner"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPbPw007EeuDP5XTX0eOOA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPb20E07EeuDP5XTX0eOOA" name="TreeSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPb20k07EeuDP5XTX0eOOA" name="NoSuchElementException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_fyomEE07EeuDP5XTX0eOOA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_gOk7ME07EeuDP5XTX0eOOA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gOmJUU07EeuDP5XTX0eOOA" name="FileWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPaosE07EeuDP5XTX0eOOA" name="IOException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_fzPDAE07EeuDP5XTX0eOOA" name="net">
        <packagedElement xmi:type="uml:Class" xmi:id="_gPaosk07EeuDP5XTX0eOOA" name="MalformedURLException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPbPwU07EeuDP5XTX0eOOA" name="URL"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_gQYSAE07EeuDP5XTX0eOOA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_gQYSAU07EeuDP5XTX0eOOA" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fww90E07EeuDP5XTX0eOOA" name="ex4">
      <packagedElement xmi:type="uml:Package" xmi:id="_fwxk4E07EeuDP5XTX0eOOA" name="geometry">
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4hysE07EeuDP5XTX0eOOA" name="GeoShape">
          <ownedComment xmi:id="_gSfK0U07EeuDP5XTX0eOOA">
            <body>This interface represents a geometric (2D) shape in the plane. The methods includes:
moving a shape by a vector, testing if a shape contains a point, centerOfMass, area, 
perimeter, toString and a method (getPoints) for getting the points representing this 
GeoShape.

Ex4: you should NOT change this interface!
@author boaz.benmoshe</body>
          </ownedComment>
          <ownedAttribute xmi:id="_f4nSQE07EeuDP5XTX0eOOA" name="points" type="_f6dFUE07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTGO0U07EeuDP5XTX0eOOA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f4n5UE07EeuDP5XTX0eOOA" value="*"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_f4ldEE07EeuDP5XTX0eOOA" name="centerOfMass">
            <ownedComment xmi:id="_gSfK0007EeuDP5XTX0eOOA">
              <body>Computes the center of mass of this shape
	 * @return a 2D point</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO7gg007EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f4mEIE07EeuDP5XTX0eOOA" name="area">
            <ownedComment xmi:id="_gSfK1E07EeuDP5XTX0eOOA">
              <body>Computes the area of this shape, in case of a point, and a segment should return 0.
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_f4mEIU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f4mrME07EeuDP5XTX0eOOA" name="perimeter">
            <ownedComment xmi:id="_gSfK1U07EeuDP5XTX0eOOA">
              <body>Computes the perimeter of this shape, return 0 in case of a point and twice the length in the segment in case of a segment. 
	 * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_f4mrMU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f4mrMk07EeuDP5XTX0eOOA" name="copy">
            <ownedComment xmi:id="_gSfK1007EeuDP5XTX0eOOA">
              <body>This method computes a new (deep) copy of this GeoShape 
	 * @return a deep copy of this GeoShape.</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO8Hkk07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f4mrM007EeuDP5XTX0eOOA" name="toString">
            <ownedComment xmi:id="_gSfK2E07EeuDP5XTX0eOOA">
              <body>This method returns a String representing this shape,
	 * such that one can use this string for saving the shape into a text file.
	 * @return a String representing this shape</body>
            </ownedComment>
            <ownedParameter xmi:id="_f4mrNE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gO7ggE07EeuDP5XTX0eOOA" name="contains">
            <ownedComment xmi:id="_gSfK0k07EeuDP5XTX0eOOA">
              <body>Computes if the point (ot) falls inside this (closed) shape.
	 * Note: Assumes a closed shape - aka if ot is on the boundary it is inside the shape.
	 * 
	 * @param ot - a query 2D point
	 * @return true iff the point falls with in this shape (as a closed shape).</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO7ggU07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gO7ggk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gO8HkE07EeuDP5XTX0eOOA" name="move">
            <ownedComment xmi:id="_gSfK1k07EeuDP5XTX0eOOA">
              <body>Move this shape by the vector 0,0-->vec
	 * Note: this method changes the inner state of the object.
	 * @param vec - a vector from the 0,0</body>
            </ownedComment>
            <ownedParameter xmi:id="_gO8HkU07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f4sx0E07EeuDP5XTX0eOOA" name="Circle2D">
          <ownedComment xmi:id="_gSfK2U07EeuDP5XTX0eOOA">
            <body>This class represents a 2D circle in the plane. Please make sure you update it 
according to the GeoShape interface.
Ex4: you can update this class!
@author boaz.benmoshe
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gRBLME07EeuDP5XTX0eOOA" name="_center" visibility="private" type="_f6dFUE07EeuDP5XTX0eOOA" association="_gTG14U07EeuDP5XTX0eOOA"/>
          <ownedAttribute xmi:id="_gRBLMk07EeuDP5XTX0eOOA" name="_radius" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gO8Hk007EeuDP5XTX0eOOA" client="_f4sx0E07EeuDP5XTX0eOOA" supplier="_f4hysE07EeuDP5XTX0eOOA" contract="_f4hysE07EeuDP5XTX0eOOA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5U8E07EeuDP5XTX0eOOA" name="Circle2D" specification="_gO8uoE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5U8U07EeuDP5XTX0eOOA" name="cen" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gR5U8k07EeuDP5XTX0eOOA" name="rad">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gR5U8007EeuDP5XTX0eOOA" type="_f4sx0E07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>this._center = new Point2D(cen);
		this._radius = rad;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5U9E07EeuDP5XTX0eOOA" name="getRadius" specification="_f4tY4E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5U9U07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return this._radius;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5U9k07EeuDP5XTX0eOOA" name="toString" specification="_f4t_8E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5U9007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _center.toString()+&quot;, &quot;+_radius;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5U-E07EeuDP5XTX0eOOA" name="contains" specification="_gO_K4E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5U-U07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gR5U-k07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>double dist = ot.distance(this._center);
		return dist&lt;=this._radius;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5U-007EeuDP5XTX0eOOA" name="centerOfMass" specification="_f4vOEE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5U_E07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>return new Point2D(this._center);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5U_U07EeuDP5XTX0eOOA" name="area" specification="_f4v1I007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5U_k07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double ans = Math.PI * Math.pow(this._radius, 2);
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5U_007EeuDP5XTX0eOOA" name="perimeter" specification="_f4wcM007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5VAE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double ans = Math.PI * 2 * this._radius;
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR5VAU07EeuDP5XTX0eOOA" name="move" specification="_gPBAEE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR5VAk07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <language>java</language>
            <body>_center.move(vec);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR58AE07EeuDP5XTX0eOOA" name="copy" specification="_f4xDQE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR58AU07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>return new Circle2D(_center, _radius);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR9mYE07EeuDP5XTX0eOOA" name="getPoints" specification="_f40GkE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gR9mYU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gR9mYk07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>Point2D[] ans = new Point2D[2];
		ans[0] =new Point2D(this._center);
		ans[1] = new Point2D(ans[0].x(), ans[0].y()+this._radius);
		return ans;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_f4tY4E07EeuDP5XTX0eOOA" name="getRadius" method="_gR5U9E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f4tY4U07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f4t_8E07EeuDP5XTX0eOOA" name="toString" method="_gR5U9k07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f4unAE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f4vOEE07EeuDP5XTX0eOOA" name="centerOfMass" method="_gR5U-007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gPAZAk07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f4v1I007EeuDP5XTX0eOOA" name="area" method="_gR5U_U07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f4v1JE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f4wcM007EeuDP5XTX0eOOA" name="perimeter" method="_gR5U_007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f4wcNE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f4xDQE07EeuDP5XTX0eOOA" name="copy" method="_gR58AE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gPCOME07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f40GkE07EeuDP5XTX0eOOA" name="getPoints" method="_gR9mYE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f40GkU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f40Gkk07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gO8uoE07EeuDP5XTX0eOOA" name="Circle2D" method="_gR5U8E07EeuDP5XTX0eOOA">
            <eAnnotations xmi:id="_gO9VsE07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gO98wE07EeuDP5XTX0eOOA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gO8uoU07EeuDP5XTX0eOOA" name="cen" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gO8uok07EeuDP5XTX0eOOA" name="rad">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gO98wU07EeuDP5XTX0eOOA" type="_f4sx0E07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gO_K4E07EeuDP5XTX0eOOA" name="contains" method="_gR5U-E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gO_K4U07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gO_x8E07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gPBAEE07EeuDP5XTX0eOOA" name="move" method="_gR5VAU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gPBAEU07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f6dFUE07EeuDP5XTX0eOOA" name="Point2D">
          <ownedComment xmi:id="_gSl4gE07EeuDP5XTX0eOOA">
            <body>This class represents a 2D point in the plane.
Do NOT change this class! It would be used as is for testing.
Ex4: you should NOT change this class!
@author boaz.benmoshe</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gRWiYE07EeuDP5XTX0eOOA" name="EPS1" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRXJcE07EeuDP5XTX0eOOA" value="0.001"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gRXwgE07EeuDP5XTX0eOOA" name="ORIGIN" isLeaf="true" isStatic="true" type="_f6dFUE07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTQm4007EeuDP5XTX0eOOA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRXwgU07EeuDP5XTX0eOOA" value="new Point2D(0,0)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gRXwgk07EeuDP5XTX0eOOA" name="_x" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gSmfkE07EeuDP5XTX0eOOA" name="EPS2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSmfk007EeuDP5XTX0eOOA" value="Math.pow(EPS1,2)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gSmflE07EeuDP5XTX0eOOA" name="EPS">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSmfl007EeuDP5XTX0eOOA" value="EPS2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_gSnGoE07EeuDP5XTX0eOOA" name="_y" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gP3UoE07EeuDP5XTX0eOOA" client="_f6dFUE07EeuDP5XTX0eOOA" supplier="_f4hysE07EeuDP5XTX0eOOA" contract="_f4hysE07EeuDP5XTX0eOOA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSNeAE07EeuDP5XTX0eOOA" name="Point2D" specification="_f6gvsE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSNeAU07EeuDP5XTX0eOOA" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSNeAk07EeuDP5XTX0eOOA" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSNeA007EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>_x=x; _y=y;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFEE07EeuDP5XTX0eOOA" name="Point2D" specification="_gP4iwE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFEU07EeuDP5XTX0eOOA" name="p" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOFEk07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>this(p.x(), p.y());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFE007EeuDP5XTX0eOOA" name="Point2D" specification="_f6ik4E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFFE07EeuDP5XTX0eOOA" name="s">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSOFFU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>try {
         String[] a = s.split(&quot;,&quot;);
         _x = Double.parseDouble(a[0]);
         _y = Double.parseDouble(a[1]);
     }
     catch(IllegalArgumentException e) {
         System.err.println(&quot;ERR: got wrong format string for Point2D init, got:&quot;+s+&quot;  should be of format: x,y&quot;);
         throw(e);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFFk07EeuDP5XTX0eOOA" name="x" specification="_f6jL8007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFF007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return _x;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFGE07EeuDP5XTX0eOOA" name="y" specification="_f6jzAU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFGU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return _y;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFGk07EeuDP5XTX0eOOA" name="ix" specification="_f6jzA007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFG007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return (int)_x;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFHE07EeuDP5XTX0eOOA" name="iy" specification="_f6jzBU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFHU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return (int)_y;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFHk07EeuDP5XTX0eOOA" name="add" specification="_gP5J0E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFH007EeuDP5XTX0eOOA" name="p" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOFIE07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>Point2D a = new Point2D(p.x()+x(),p.y()+y());
 	return a;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFIU07EeuDP5XTX0eOOA" name="toString" specification="_f6jzB007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOFIk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _x+&quot;,&quot;+_y;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOFI007EeuDP5XTX0eOOA" name="distance" specification="_f6loMk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsIE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.distance(ORIGIN);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOsIU07EeuDP5XTX0eOOA" name="distance" specification="_gP5J0007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsIk07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOsI007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double dx = this.x() - p2.x();
     double dy = this.y() - p2.y();
     double t = (dx*dx+dy*dy);
     return Math.sqrt(t);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOsJE07EeuDP5XTX0eOOA" name="equals" specification="_gQveYE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsJU07EeuDP5XTX0eOOA" name="p" type="_gQYSAU07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOsJk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if(p==null || !(p instanceof Point2D)) {return false;}
     Point2D p2 = (Point2D)p;
     return ( (_x==p2._x) &amp;&amp; (_y==p2._y));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOsJ007EeuDP5XTX0eOOA" name="close2equals" specification="_gP5w4U07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsKE07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOsKU07EeuDP5XTX0eOOA" name="eps">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gSOsKk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return ( this.distance(p2) &lt; eps );
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOsK007EeuDP5XTX0eOOA" name="close2equals" specification="_gP6X8U07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsLE07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOsLU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return close2equals(p2, EPS);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOsLk07EeuDP5XTX0eOOA" name="vector" specification="_gP6X9E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsL007EeuDP5XTX0eOOA" name="target" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOsME07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>double dx = target.x() - this.x();
 	double dy = target.y() - this.y();
 	return new Point2D(dx,dy);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOsMU07EeuDP5XTX0eOOA" name="contains" specification="_gP6_AU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsMk07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSOsM007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.equals(ot);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSOsNE07EeuDP5XTX0eOOA" name="centerOfMass" specification="_f6m2UE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSOsNU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>return new Point2D(this);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSPTME07EeuDP5XTX0eOOA" name="area" specification="_f6ndY007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSPTMU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return 0;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSPTMk07EeuDP5XTX0eOOA" name="perimeter" specification="_f6oEc007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSPTM007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return 0;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSPTNE07EeuDP5XTX0eOOA" name="move" specification="_gP8NIE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSPTNU07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <language>java</language>
            <body>this._x += vec.x();
		this._y += vec.y();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSPTNk07EeuDP5XTX0eOOA" name="copy" specification="_f6org007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSPTN007EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>return new Point2D(this);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSPTOE07EeuDP5XTX0eOOA" name="getPoints" specification="_f6pSk007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSPTOU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSPTOk07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>Point2D[] ans = new Point2D[1];
		ans[0] =new Point2D(this);
		return ans;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_f6gvsE07EeuDP5XTX0eOOA" name="Point2D" method="_gSNeAE07EeuDP5XTX0eOOA">
            <eAnnotations xmi:id="_f6hWwk07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_f6h90E07EeuDP5XTX0eOOA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_f6hWwE07EeuDP5XTX0eOOA" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_f6hWwU07EeuDP5XTX0eOOA" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_f6h90U07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f6ik4E07EeuDP5XTX0eOOA" name="Point2D" method="_gSOFE007EeuDP5XTX0eOOA">
            <eAnnotations xmi:id="_f6jL8E07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_f6jL8U07EeuDP5XTX0eOOA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_f6ik4U07EeuDP5XTX0eOOA" name="s">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_f6jL8k07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f6jL8007EeuDP5XTX0eOOA" name="x" method="_gSOFFk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6jzAE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6jzAU07EeuDP5XTX0eOOA" name="y" method="_gSOFGE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6jzAk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6jzA007EeuDP5XTX0eOOA" name="ix" method="_gSOFGk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6jzBE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6jzBU07EeuDP5XTX0eOOA" name="iy" method="_gSOFHE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6jzBk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6jzB007EeuDP5XTX0eOOA" name="toString" method="_gSOFIU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6kaEE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6loMk07EeuDP5XTX0eOOA" name="distance" method="_gSOFI007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6loM007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6m2UE07EeuDP5XTX0eOOA" name="centerOfMass" method="_gSOsNE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP7mEk07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f6ndY007EeuDP5XTX0eOOA" name="area" method="_gSPTME07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6ndZE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6oEc007EeuDP5XTX0eOOA" name="perimeter" method="_gSPTMk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6oEdE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6org007EeuDP5XTX0eOOA" name="copy" method="_gSPTNk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP8NJU07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f6pSk007EeuDP5XTX0eOOA" name="getPoints" method="_gSPTOE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6pSlE07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f6pSlU07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP4iwE07EeuDP5XTX0eOOA" name="Point2D" method="_gSOFEE07EeuDP5XTX0eOOA">
            <eAnnotations xmi:id="_gP4iwk07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gP4iw007EeuDP5XTX0eOOA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gP4iwU07EeuDP5XTX0eOOA" name="p" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP4ixE07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gP5J0E07EeuDP5XTX0eOOA" name="add" method="_gSOFHk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP5J0U07EeuDP5XTX0eOOA" name="p" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP5J0k07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gP5J0007EeuDP5XTX0eOOA" name="distance" method="_gSOsIU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP5J1E07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP5w4E07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP5w4U07EeuDP5XTX0eOOA" name="close2equals" method="_gSOsJ007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP5w4k07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP5w4007EeuDP5XTX0eOOA" name="eps">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_gP6X8E07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP6X8U07EeuDP5XTX0eOOA" name="close2equals" method="_gSOsK007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP6X8k07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP6X8007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP6X9E07EeuDP5XTX0eOOA" name="vector" method="_gSOsLk07EeuDP5XTX0eOOA">
            <ownedComment xmi:id="_gSnGo007EeuDP5XTX0eOOA">
              <body>This method returns the vector between this point and the target point. The vector is represented as a Point2D.
     * @param target
     * @return</body>
            </ownedComment>
            <ownedParameter xmi:id="_gP6X9U07EeuDP5XTX0eOOA" name="target" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP6_AE07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gP6_AU07EeuDP5XTX0eOOA" name="contains" method="_gSOsMU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP6_Ak07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP6_A007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP8NIE07EeuDP5XTX0eOOA" name="move" method="_gSPTNE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP8NIU07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gQveYE07EeuDP5XTX0eOOA" name="equals" method="_gSOsJE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQwFcE07EeuDP5XTX0eOOA" name="p" type="_gQYSAU07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gQwFcU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f6s88E07EeuDP5XTX0eOOA" name="Rect2D">
          <ownedComment xmi:id="_gSnGpE07EeuDP5XTX0eOOA">
            <body>This class represents a 2D axis parallel rectangle.
Ex4: you should implement this class!
@author I2CS
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gRYXkE07EeuDP5XTX0eOOA" name="_min" visibility="private" type="_f6dFUE07EeuDP5XTX0eOOA" association="_gTQm5k07EeuDP5XTX0eOOA"/>
          <ownedAttribute xmi:id="_gSnGpU07EeuDP5XTX0eOOA" name="_max" visibility="private" type="_f6dFUE07EeuDP5XTX0eOOA" association="_gTScFE07EeuDP5XTX0eOOA"/>
          <interfaceRealization xmi:id="_gP80ME07EeuDP5XTX0eOOA" client="_f6s88E07EeuDP5XTX0eOOA" supplier="_f4hysE07EeuDP5XTX0eOOA" contract="_f4hysE07EeuDP5XTX0eOOA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSP6QE07EeuDP5XTX0eOOA" name="Rect2D" specification="_gP9bQE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSP6QU07EeuDP5XTX0eOOA" name="p1" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSP6Qk07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSP6Q007EeuDP5XTX0eOOA" type="_f6s88E07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>double x0 = Math.min(p1.x(), p2.x());
		double y0 = Math.min(p1.y(), p2.y());
		double x1 = Math.max(p1.x(), p2.x());
		double y1 = Math.max(p1.y(), p2.y());
		_min = new Point2D(x0,y0);
		_max = new Point2D(x1,y1);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSP6RE07EeuDP5XTX0eOOA" name="width" specification="_f6uyIE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSP6RU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return _max.x()-_min.x();</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSP6Rk07EeuDP5XTX0eOOA" name="height" specification="_f6vZME07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSP6R007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return _max.y()-_min.y();</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSP6SE07EeuDP5XTX0eOOA" name="contains" specification="_gP9bRk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSP6SU07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSP6Sk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>boolean ans = false;
		if(ot!=null) {
			if(ot.x()>=_min.x() &amp;&amp; ot.y()>=_min.y() &amp;&amp;
				ot.x()&lt;=_max.x() &amp;&amp; ot.y()&lt;=_max.y()) {
				ans = true;
			}
		}
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSP6S007EeuDP5XTX0eOOA" name="centerOfMass" specification="_f6vZMk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSP6TE07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>double x = (_min.x()+_max.x())/2;
		double y = (_min.y()+_max.y())/2;
		return new Point2D(x,y);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSP6TU07EeuDP5XTX0eOOA" name="area" specification="_f6wAQ007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSP6Tk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double ans = width() * height();
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSP6T007EeuDP5XTX0eOOA" name="perimeter" specification="_f6xOYE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSP6UE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double ans = width() + height();
		return ans*2;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSQhUE07EeuDP5XTX0eOOA" name="move" specification="_gP-CVE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSQhUU07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <language>java</language>
            <body>_min.move(vec);
		_max.move(vec);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSQhUk07EeuDP5XTX0eOOA" name="copy" specification="_f604wE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSQhU007EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>return new Rect2D(_min,_max);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSQhVE07EeuDP5XTX0eOOA" name="getPoints" specification="_f61f0007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSQhVU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSQhVk07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>Point2D[] ans = {new Point2D(_min), new Point2D(_max)};
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSQhV007EeuDP5XTX0eOOA" name="toString" specification="_f62G5E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSQhWE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String ans = _min+&quot;,&quot;+_max;
		return ans;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_f6uyIE07EeuDP5XTX0eOOA" name="width" method="_gSP6RE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6uyIU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6vZME07EeuDP5XTX0eOOA" name="height" method="_gSP6Rk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6vZMU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6vZMk07EeuDP5XTX0eOOA" name="centerOfMass" method="_gSP6S007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP-CU007EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f6wAQ007EeuDP5XTX0eOOA" name="area" method="_gSP6TU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6wARE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f6xOYE07EeuDP5XTX0eOOA" name="perimeter" method="_gSP6T007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f6xOYU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f604wE07EeuDP5XTX0eOOA" name="copy" method="_gSQhUk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP-pYE07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f61f0007EeuDP5XTX0eOOA" name="getPoints" method="_gSQhVE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f61f1E07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f61f1U07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f62G5E07EeuDP5XTX0eOOA" name="toString" method="_gSQhV007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f62G5U07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP9bQE07EeuDP5XTX0eOOA" name="Rect2D" method="_gSP6QE07EeuDP5XTX0eOOA">
            <eAnnotations xmi:id="_gP9bQ007EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gP9bRE07EeuDP5XTX0eOOA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gP9bQU07EeuDP5XTX0eOOA" name="p1" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP9bQk07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP9bRU07EeuDP5XTX0eOOA" type="_f6s88E07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gP9bRk07EeuDP5XTX0eOOA" name="contains" method="_gSP6SE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP9bR007EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP9bSE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP-CVE07EeuDP5XTX0eOOA" name="move" method="_gSQhUE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP-CVU07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f638EE07EeuDP5XTX0eOOA" name="Segment2D">
          <ownedComment xmi:id="_gSntsk07EeuDP5XTX0eOOA">
            <body>This class represents a 2D segment on the plane, 
Ex4: you should implement this class!
@author I2CS
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gRY-oU07EeuDP5XTX0eOOA" name="_p1" visibility="private" type="_f6dFUE07EeuDP5XTX0eOOA" association="_gTRN8U07EeuDP5XTX0eOOA"/>
          <ownedAttribute xmi:id="_gSnts007EeuDP5XTX0eOOA" name="_p2" visibility="private" type="_f6dFUE07EeuDP5XTX0eOOA" association="_gTScF007EeuDP5XTX0eOOA"/>
          <interfaceRealization xmi:id="_gP-pYU07EeuDP5XTX0eOOA" client="_f638EE07EeuDP5XTX0eOOA" supplier="_f4hysE07EeuDP5XTX0eOOA" contract="_f4hysE07EeuDP5XTX0eOOA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSQhWU07EeuDP5XTX0eOOA" name="Segment2D" specification="_gP_QcE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSQhWk07EeuDP5XTX0eOOA" name="a" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSQhW007EeuDP5XTX0eOOA" name="b" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSQhXE07EeuDP5XTX0eOOA" type="_f638EE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>_p1=new Point2D(a);
		_p2=new Point2D(b);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSQhXU07EeuDP5XTX0eOOA" name="contains" specification="_gP_3gk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSQhXk07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSQhX007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>boolean ans = false;
		double d12 = _p1.distance(_p2);
		double dd = _p1.distance(ot)+ot.distance(_p2);
		ans = d12+Ex4_Const.EPS>= dd;
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRIYE07EeuDP5XTX0eOOA" name="centerOfMass" specification="_f65KME07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRIYU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>double x=0,y=0;
		x += _p1.x() + _p2.x();
		y += _p1.y() + _p2.y();
	
		return new Point2D(x/2,y/2);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRIYk07EeuDP5XTX0eOOA" name="area" specification="_f65KNE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRIY007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return 0;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRIZE07EeuDP5XTX0eOOA" name="perimeter" specification="_f65xQ007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRIZU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double ans = _p1.distance(_p2);
		return ans*2;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRIZk07EeuDP5XTX0eOOA" name="move" specification="_gQAelU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRIZ007EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <language>java</language>
            <body>_p1.move(vec);
		_p2.move(vec);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRIaE07EeuDP5XTX0eOOA" name="copy" specification="_f65xSE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRIaU07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>return new Segment2D(_p1,_p2);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRIak07EeuDP5XTX0eOOA" name="getPoints" specification="_f66YU007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRIa007EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSRIbE07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>Point2D[] ans = {new Point2D(_p1), new Point2D(_p2)};
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRIbU07EeuDP5XTX0eOOA" name="toString" specification="_f67mc007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRIbk07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String ans = _p1+&quot;,&quot;+_p2;//
		return ans;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_f65KME07EeuDP5XTX0eOOA" name="centerOfMass" method="_gSRIYE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQAelE07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f65KNE07EeuDP5XTX0eOOA" name="area" method="_gSRIYk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f65KNU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f65xQ007EeuDP5XTX0eOOA" name="perimeter" method="_gSRIZE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f65xRE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f65xSE07EeuDP5XTX0eOOA" name="copy" method="_gSRIaE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQCTwk07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f66YU007EeuDP5XTX0eOOA" name="getPoints" method="_gSRIak07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f66YVE07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f66YVU07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f67mc007EeuDP5XTX0eOOA" name="toString" method="_gSRIbU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f68NgE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gP_QcE07EeuDP5XTX0eOOA" name="Segment2D" method="_gSQhWU07EeuDP5XTX0eOOA">
            <eAnnotations xmi:id="_gP_Qc007EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gP_3gE07EeuDP5XTX0eOOA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gP_QcU07EeuDP5XTX0eOOA" name="a" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP_Qck07EeuDP5XTX0eOOA" name="b" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gP_3gU07EeuDP5XTX0eOOA" type="_f638EE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gP_3gk07EeuDP5XTX0eOOA" name="contains" method="_gSQhXU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gP_3g007EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gQAekE07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gQAelU07EeuDP5XTX0eOOA" name="move" method="_gSRIZk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQBFoE07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f6-CsE07EeuDP5XTX0eOOA" name="Triangle2D">
          <ownedComment xmi:id="_gSoUwE07EeuDP5XTX0eOOA">
            <body>This class represents a 2D Triangle in the plane.
Ex4: you should implement this class!
@author I2CS
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_gRZlsE07EeuDP5XTX0eOOA" name="_ps" visibility="private" type="_f6dFUE07EeuDP5XTX0eOOA" association="_gTRN9E07EeuDP5XTX0eOOA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gRZlsU07EeuDP5XTX0eOOA" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_gQC60E07EeuDP5XTX0eOOA" client="_f6-CsE07EeuDP5XTX0eOOA" supplier="_f4hysE07EeuDP5XTX0eOOA" contract="_f4hysE07EeuDP5XTX0eOOA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRvcE07EeuDP5XTX0eOOA" name="Triangle2D" specification="_gQDh4E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRvcU07EeuDP5XTX0eOOA" name="p1" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSRvck07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSRvc007EeuDP5XTX0eOOA" name="p3" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSRvdE07EeuDP5XTX0eOOA" type="_f6-CsE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>_ps = new Point2D[3];
		_ps[0]=new Point2D(p1);
		_ps[1]=new Point2D(p2);
		_ps[2]=new Point2D(p3);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRvdU07EeuDP5XTX0eOOA" name="contains" specification="_gQDh5007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRvdk07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gSRvd007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>boolean ans = false;
		double area = this.area(), a1=0;
		for(int i=0;i&lt;_ps.length;i=i+1) {
			int i1 = (i+1)%3;
			Triangle2D t = new Triangle2D(_ps[i], _ps[i1], ot);
			a1+=t.area();
		}
		double da = a1-area;
		ans = da&lt;Point2D.EPS; // ZZZZ should be a Constant class;
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRveE07EeuDP5XTX0eOOA" name="centerOfMass" specification="_f6-pwE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRveU07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>Point2D ans = null;
		double x=0,y=0;
		for(int i=0;i&lt;_ps.length;i=i+1) {
			x += _ps[i].x();
			y += _ps[i].y();
		}
		ans = new Point2D(x/3,y/3);
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRvek07EeuDP5XTX0eOOA" name="area" specification="_f7Ae8k07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRve007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double d = this.perimeter()/2;
		double ans = 1;
		for(int i=0;i&lt;_ps.length;i=i+1) {
			int i1 = (i+1)%3;
			double abc = _ps[i].distance(_ps[i1]);
			ans *= (d-abc);
		}
		return Math.sqrt(ans);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRvfE07EeuDP5XTX0eOOA" name="perimeter" specification="_f7BtEk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRvfU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>double ans = 0;
		for(int i=0;i&lt;_ps.length;i=i+1) {
			int i1 = (i+1)%3;
			double d = _ps[i].distance(_ps[i1]);
			ans += d;
		}
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRvfk07EeuDP5XTX0eOOA" name="move" specification="_gQEI8007EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRvf007EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <language>java</language>
            <body>for(int i=0;i&lt;_ps.length;i=i+1) {
			_ps[i].move(vec);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRvgE07EeuDP5XTX0eOOA" name="copy" specification="_f7CUIk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRvgU07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
            <language>java</language>
            <body>return new Triangle2D(_ps[0], _ps[1], _ps[2]);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSRvgk07EeuDP5XTX0eOOA" name="getPoints" specification="_f7C7MU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSRvg007EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSRvhE07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>Point2D[] ans = new Point2D[3];
		for(int i=0;i&lt;_ps.length;i=i+1) {
			ans[i] = new Point2D(_ps[i]);
		}
		return ans;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSSWgE07EeuDP5XTX0eOOA" name="toString" specification="_f7EwYE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSSWgU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String ans = &quot;&quot;;//
		for(int i=0;i&lt;_ps.length;i=i+1) {
			ans += _ps[i];
			if(i&lt;2) {ans+=&quot;,&quot;;}
		}
		return ans;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_f6-pwE07EeuDP5XTX0eOOA" name="centerOfMass" method="_gSRveE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQEI8k07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f7Ae8k07EeuDP5XTX0eOOA" name="area" method="_gSRvek07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f7Ae8007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f7BtEk07EeuDP5XTX0eOOA" name="perimeter" method="_gSRvfE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f7BtE007EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f7CUIk07EeuDP5XTX0eOOA" name="copy" method="_gSRvgE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQEI-E07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_f7C7MU07EeuDP5XTX0eOOA" name="getPoints" method="_gSRvgk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f7C7Mk07EeuDP5XTX0eOOA" type="_f6dFUE07EeuDP5XTX0eOOA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f7C7M007EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f7EwYE07EeuDP5XTX0eOOA" name="toString" method="_gSSWgE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f7EwYU07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gQDh4E07EeuDP5XTX0eOOA" name="Triangle2D" method="_gSRvcE07EeuDP5XTX0eOOA">
            <eAnnotations xmi:id="_gQDh5E07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_gQDh5U07EeuDP5XTX0eOOA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_gQDh4U07EeuDP5XTX0eOOA" name="p1" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gQDh4k07EeuDP5XTX0eOOA" name="p2" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gQDh4007EeuDP5XTX0eOOA" name="p3" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gQDh5k07EeuDP5XTX0eOOA" type="_f6-CsE07EeuDP5XTX0eOOA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_gQDh5007EeuDP5XTX0eOOA" name="contains" method="_gSRvdU07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQDh6E07EeuDP5XTX0eOOA" name="ot" type="_f6dFUE07EeuDP5XTX0eOOA"/>
            <ownedParameter xmi:id="_gQDh6U07EeuDP5XTX0eOOA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_gQEI8007EeuDP5XTX0eOOA" name="move" method="_gSRvfk07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gQEI9E07EeuDP5XTX0eOOA" name="vec" type="_f6dFUE07EeuDP5XTX0eOOA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTGO0U07EeuDP5XTX0eOOA" name="" memberEnd="_gTGO0k07EeuDP5XTX0eOOA _f4nSQE07EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTGO0k07EeuDP5XTX0eOOA" name="" type="_f4hysE07EeuDP5XTX0eOOA" association="_gTGO0U07EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTG14U07EeuDP5XTX0eOOA" name="" memberEnd="_gTG14k07EeuDP5XTX0eOOA _gRBLME07EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTG14k07EeuDP5XTX0eOOA" name="" type="_f4sx0E07EeuDP5XTX0eOOA" association="_gTG14U07EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTQm4007EeuDP5XTX0eOOA" name="" memberEnd="_gTQm5E07EeuDP5XTX0eOOA _gRXwgE07EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTQm5E07EeuDP5XTX0eOOA" name="" type="_f6dFUE07EeuDP5XTX0eOOA" association="_gTQm4007EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTQm5k07EeuDP5XTX0eOOA" name="" memberEnd="_gTQm5007EeuDP5XTX0eOOA _gRYXkE07EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTQm5007EeuDP5XTX0eOOA" name="" type="_f6s88E07EeuDP5XTX0eOOA" association="_gTQm5k07EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTRN8U07EeuDP5XTX0eOOA" name="" memberEnd="_gTRN8k07EeuDP5XTX0eOOA _gRY-oU07EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTRN8k07EeuDP5XTX0eOOA" name="" type="_f638EE07EeuDP5XTX0eOOA" association="_gTRN8U07EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTRN9E07EeuDP5XTX0eOOA" name="" memberEnd="_gTRN9U07EeuDP5XTX0eOOA _gRZlsE07EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTRN9U07EeuDP5XTX0eOOA" name="" type="_f6-CsE07EeuDP5XTX0eOOA" association="_gTRN9E07EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTScFE07EeuDP5XTX0eOOA" name="" memberEnd="_gTScFU07EeuDP5XTX0eOOA _gSnGpU07EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTScFU07EeuDP5XTX0eOOA" name="" type="_f6s88E07EeuDP5XTX0eOOA" association="_gTScFE07EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gTScF007EeuDP5XTX0eOOA" name="" memberEnd="_gTScGE07EeuDP5XTX0eOOA _gSnts007EeuDP5XTX0eOOA">
          <ownedEnd xmi:id="_gTScGE07EeuDP5XTX0eOOA" name="" type="_f638EE07EeuDP5XTX0eOOA" association="_gTScF007EeuDP5XTX0eOOA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_fyNIQE07EeuDP5XTX0eOOA" name="tests">
        <packagedElement xmi:type="uml:Class" xmi:id="_f2gZcE07EeuDP5XTX0eOOA" name="PointTest" visibility="package">
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRyAME07EeuDP5XTX0eOOA" name="test0" specification="_f2kD0E07EeuDP5XTX0eOOA">
            <language>java</language>
            <body>Point2D p1 = new Point2D(1,2.1);
		Point2D p2 = new Point2D(1,2.1);
		Point2D p3 = new Point2D(1,2.1);
		assertEquals(p1,p1);
		assertEquals(p1,p2);
		assertEquals(p1,p3);
		assertEquals(p3,p2);
		Point2D eps = new Point2D(Point2D.EPS, Point2D.EPS);
		p1.move(eps);
		assertNotEquals(p1,p2);
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRyAMU07EeuDP5XTX0eOOA" name="test1" specification="_f2tNwE07EeuDP5XTX0eOOA">
            <language>java</language>
            <body>Point2D p1 = new Point2D(1,2.1);
		Point2D p2 = new Point2D(1,2.1);
		Point2D p3 = new Point2D(1,2.1);
		
		assertTrue(p1.contains(p2));
		assertTrue(p1.contains(p1));
		assertTrue(p2.contains(p1));
		
		Point2D eps = new Point2D(Point2D.EPS, Point2D.EPS);
		p1.move(eps);
		assertFalse(p1.contains(p2));
		
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRyAMk07EeuDP5XTX0eOOA" name="test2" specification="_f2wREE07EeuDP5XTX0eOOA">
            <language>java</language>
            <body>Point2D p1 = new Point2D(1,2.1);
		Point2D p2 = new Point2D(1,2.1);
		Point2D p3 = new Point2D(1,2.1);
		
		Rect2D r1 = new Rect2D(p1,p2);
		assertTrue(r1.contains(p1));
		assertTrue(r1.contains(p2));
		
		Point2D eps = new Point2D(Point2D.EPS, Point2D.EPS);
		p1.move(eps);
		assertFalse(r1.contains(p1));
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_f2kD0E07EeuDP5XTX0eOOA" name="test0" visibility="package" method="_gRyAME07EeuDP5XTX0eOOA"/>
          <ownedOperation xmi:id="_f2tNwE07EeuDP5XTX0eOOA" name="test1" visibility="package" method="_gRyAMU07EeuDP5XTX0eOOA"/>
          <ownedOperation xmi:id="_f2wREE07EeuDP5XTX0eOOA" name="test2" visibility="package" method="_gRyAMk07EeuDP5XTX0eOOA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f7SLwE07EeuDP5XTX0eOOA" name="Test_Ex4">
          <ownedComment xmi:id="_gSoUwU07EeuDP5XTX0eOOA">
            <body>This class represents a simple main which demonstrates the use of Ex4
with respect to creating geo and gui shapes, adding shapes to a GUI container,
using a GUI present the shapes and performing save and load.

@author boaz.benmoshe
 *</body>
          </ownedComment>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSULsE07EeuDP5XTX0eOOA" name="main" specification="_f7Sy0E07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_gSULsU07EeuDP5XTX0eOOA" name="a">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSULsk07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>test1();
		test2();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSULs007EeuDP5XTX0eOOA" name="test1" specification="_f7TZ4U07EeuDP5XTX0eOOA">
            <language>java</language>
            <body>Ex4 win = new Ex4();
		GUI_Shape_Collection sc = win.getShape_Collection();
		Point2D p1 = new Point2D(0.1,0.2);
		
		Circle2D c1 = new Circle2D(p1,0.14);
		Rect2D r1 = new Rect2D(p1, new Point2D(0.5,0.45));
		Rect2D r2 = new Rect2D(p1, new Point2D(0.17,0.77));
		Point2D a1 = new Point2D(0.8,0.7), a2 = new Point2D(0.3,0.65), a3 = new Point2D(0.1,0.1);;
		Triangle2D t1 = new Triangle2D(a1,a2,a3);
		p1.move(p1);
		Segment2D seg1 = new Segment2D(new Point2D(0.2,0.6), new Point2D(0.7,0.2));
		StdDraw.setCanvasSize(Ex4_Const.Width, Ex4_Const.Height);
		StdDraw.setScale(0, 0.9);
		int tag = 0;
		GUI_Shape s1 = new GUIShape(p1,false, Color.blue, tag++);
		GUI_Shape s2 = new GUIShape(c1,true, Color.red, tag++);
		GUI_Shape s3 = new GUIShape(r1,true, Color.green, tag++);
		GUI_Shape s4 = new GUIShape(r2,false, Color.cyan, tag++);
		GUI_Shape s5 = new GUIShape(t1,false, Color.orange, tag++);
		GUI_Shape s6 = new GUIShape(seg1,false, Color.pink, tag++);
		sc.add(s1);
		sc.add(s2);
		sc.add(s3);
		sc.add(s4);
		sc.add(s5);
		sc.add(s6);
		Rect2D bb = sc.getBoundingBox();
		Point2D min = bb.getPoints()[0], max = bb.getPoints()[1];
		GUI_Shape s7 = new GUIShape(bb,false, Color.gray, tag++);
		sc.add(s7);
		double m0 = Math.min(min.x(), min.y());
		double m1 = Math.max(max.x(), max.y());
		StdDraw.setScale(m0-0.1,m1+0.1);
		win.show();
		System.out.println(sc);
		sc.save(&quot;test_save.txt&quot;);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSULtE07EeuDP5XTX0eOOA" name="test2" specification="_f7TZ4k07EeuDP5XTX0eOOA">
            <language>java</language>
            <body>Ex4 win = new Ex4();
		GUI_Shape_Collection sc = win.getShape_Collection();
		sc.load(&quot;test_save.txt&quot;);
		int flag = 0;
		while(flag!=-1) { 
			Scanner sca = new Scanner(System.in);
			System.out.print(&quot;Enter a sorting method (a number in [0-5]): &quot;);
		    String fs = sca.next();
		    flag = Integer.parseInt(fs); 
		    Shape_Comp comp = new Shape_Comp(flag);
			sc.sort(comp);
			System.out.println(&quot;**** Sorting accurding to flag=&quot;+flag+&quot; ****&quot;);
			System.out.println(sc);
			System.out.println();
			win.show();
		}
</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_f7Sy0E07EeuDP5XTX0eOOA" name="main" isStatic="true" method="_gSULsE07EeuDP5XTX0eOOA">
            <ownedParameter xmi:id="_f7Sy0U07EeuDP5XTX0eOOA" name="a">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f7TZ4E07EeuDP5XTX0eOOA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_f7TZ4U07EeuDP5XTX0eOOA" name="test1" isStatic="true" method="_gSULs007EeuDP5XTX0eOOA"/>
          <ownedOperation xmi:id="_f7TZ4k07EeuDP5XTX0eOOA" name="test2" isStatic="true" method="_gSULtE07EeuDP5XTX0eOOA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_f0pYQE07EeuDP5XTX0eOOA" name="Ex4">
        <ownedComment xmi:id="_gSWn8E07EeuDP5XTX0eOOA">
          <body>This class is the &quot;main&quot; class which will be constructed and run as in (Test_Ex4).
Ex4: you should implement this class!
@author boaz.benmoshe
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gQ3aME07EeuDP5XTX0eOOA" name="_gsc" visibility="private" type="_f3DzEE07EeuDP5XTX0eOOA" association="_gTGO1E07EeuDP5XTX0eOOA"/>
        <interfaceRealization xmi:id="_gNk1oE07EeuDP5XTX0eOOA" client="_f0pYQE07EeuDP5XTX0eOOA" supplier="_f2WBYE07EeuDP5XTX0eOOA" contract="_f2WBYE07EeuDP5XTX0eOOA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRo2QE07EeuDP5XTX0eOOA" name="Ex4" specification="_f1Mx4E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRo2QU07EeuDP5XTX0eOOA" type="_f0pYQE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>_gsc = new Shape_Collection();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRuV0E07EeuDP5XTX0eOOA" name="init" specification="_gN6M0E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRuV0U07EeuDP5XTX0eOOA" name="g" type="_f3DzEE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>_gsc = g;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRuV0k07EeuDP5XTX0eOOA" name="getShape_Collection" specification="_f1YYEE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRuV0007EeuDP5XTX0eOOA" type="_f3DzEE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>return _gsc;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRu84E07EeuDP5XTX0eOOA" name="show" specification="_f13gQE07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>StdDraw.clear();
		for(int i=0;i&lt;_gsc.size();i++) {
			GUI_Shape cr = _gsc.get(i);
			Color c = cr.getColor();
			StdDraw.setPenColor(c);
			StdDraw.setPenRadius(0.01);
			boolean f = cr.isFilled();
			GeoShape g = cr.getShape();
			if(g instanceof Point2D) {
				drawPoint((Point2D)g);
			}
			if(g instanceof Circle2D) {
				drawCircle((Circle2D)g, f);
			}
			if(g instanceof Rect2D) {
				drawRect((Rect2D)g, f);
			}
			if(g instanceof Triangle2D) {
				drawPolygon((Triangle2D)g, f);
			}
			if(g instanceof Segment2D) {
				drawSegment((Segment2D)g);
			}
		}
		StdDraw.show();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRvj8E07EeuDP5XTX0eOOA" name="drawPoint" specification="_gOHoME07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRvj8U07EeuDP5XTX0eOOA" name="p" type="_f6dFUE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>StdDraw.point(p.x(), p.y());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRvj8k07EeuDP5XTX0eOOA" name="drawSegment" specification="_gOI2UE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRvj8007EeuDP5XTX0eOOA" name="s" type="_f638EE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>Point2D[] ps = s.getPoints();
		StdDraw.line(ps[0].x(),ps[0].y(), ps[1].x(), ps[1].y());
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRwLAE07EeuDP5XTX0eOOA" name="drawCircle" specification="_gOJdYE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRwyEE07EeuDP5XTX0eOOA" name="c" type="_f4sx0E07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gRwyEU07EeuDP5XTX0eOOA" name="fill">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>//_std.setPenRadius(0.01);
		Point2D p = c.centerOfMass();
		if(fill) {
			StdDraw.filledCircle(p.x(), p.y(), c.getRadius());}
		else {
			StdDraw.circle(p.x(), p.y(), c.getRadius());}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRxZIE07EeuDP5XTX0eOOA" name="drawRect" specification="_gOJdY007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRxZIU07EeuDP5XTX0eOOA" name="c" type="_f6s88E07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gRxZIk07EeuDP5XTX0eOOA" name="fill">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>//_std.setPenRadius(0.01);
		Point2D p = c.centerOfMass();
		if(fill) {
			StdDraw.filledRectangle(p.x(), p.y(),c.width()/2,c.height()/2);}
		else {
			StdDraw.rectangle(p.x(), p.y(),c.width()/2,c.height()/2);}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRxZI007EeuDP5XTX0eOOA" name="drawPolygon" specification="_gOL5oE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRxZJE07EeuDP5XTX0eOOA" name="c" type="_f6-CsE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gRxZJU07EeuDP5XTX0eOOA" name="fill">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>//_std.setPenRadius(0.01);
		Point2D[] p = c.getPoints();
		double[] xx = new double[p.length];
		double[] yy = new double[p.length];
		for(int i=0;i&lt;xx.length;i=i+1) {
			xx[i] = p[i].x();
			yy[i] = p[i].y();
		}
		if(fill) {
			StdDraw.filledPolygon(xx, yy);}
		else {
			StdDraw.polygon(xx, yy);}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRxZJk07EeuDP5XTX0eOOA" name="getInfo" specification="_f2BRQE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRxZJ007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return this._gsc.toString();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_f1Mx4E07EeuDP5XTX0eOOA" name="Ex4" method="_gRo2QE07EeuDP5XTX0eOOA">
          <eAnnotations xmi:id="_f1RqYE07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_f1TfkE07EeuDP5XTX0eOOA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_f1UGoE07EeuDP5XTX0eOOA" type="_f0pYQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f1YYEE07EeuDP5XTX0eOOA" name="getShape_Collection" method="_gRuV0k07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gOGaEE07EeuDP5XTX0eOOA" type="_f3DzEE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f13gQE07EeuDP5XTX0eOOA" name="show" method="_gRu84E07EeuDP5XTX0eOOA"/>
        <ownedOperation xmi:id="_f2BRQE07EeuDP5XTX0eOOA" name="getInfo" method="_gRxZJk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f2B4UE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gN6M0E07EeuDP5XTX0eOOA" name="init" method="_gRuV0E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gN7a8E07EeuDP5XTX0eOOA" name="g" type="_f3DzEE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gOHoME07EeuDP5XTX0eOOA" name="drawPoint" visibility="private" method="_gRvj8E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gOIPQE07EeuDP5XTX0eOOA" name="p" type="_f6dFUE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gOI2UE07EeuDP5XTX0eOOA" name="drawSegment" visibility="private" method="_gRvj8k07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gOI2UU07EeuDP5XTX0eOOA" name="s" type="_f638EE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gOJdYE07EeuDP5XTX0eOOA" name="drawCircle" visibility="private" method="_gRwLAE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gOJdYU07EeuDP5XTX0eOOA" name="c" type="_f4sx0E07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gOJdYk07EeuDP5XTX0eOOA" name="fill">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gOJdY007EeuDP5XTX0eOOA" name="drawRect" visibility="private" method="_gRxZIE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gOKEcE07EeuDP5XTX0eOOA" name="c" type="_f6s88E07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gOKEcU07EeuDP5XTX0eOOA" name="fill">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gOL5oE07EeuDP5XTX0eOOA" name="drawPolygon" visibility="private" method="_gRxZI007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gOL5oU07EeuDP5XTX0eOOA" name="c" type="_f6-CsE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gOMgsE07EeuDP5XTX0eOOA" name="fill">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_f2OsoE07EeuDP5XTX0eOOA" name="Ex4_Const">
        <ownedComment xmi:id="_gSXPAE07EeuDP5XTX0eOOA">
          <body>This class represents a set of parameters for Ex3 GUI Shape application for:
Introduction to Computer Science 2020, Ariel University.
@author boaz.benmoshe</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gQ5PYU07EeuDP5XTX0eOOA" name="EPS1" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gQ52cE07EeuDP5XTX0eOOA" value="0.001"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gQ8SsE07EeuDP5XTX0eOOA" name="Sort_By_Tag" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gQ85wE07EeuDP5XTX0eOOA" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gQ9g0E07EeuDP5XTX0eOOA" name="Width" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gQ9g0U07EeuDP5XTX0eOOA" value="512"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSXPAU07EeuDP5XTX0eOOA" name="EPS2">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSX2EU07EeuDP5XTX0eOOA" value="Math.pow(EPS1, 2)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSX2Ek07EeuDP5XTX0eOOA" name="EPS">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSYdIU07EeuDP5XTX0eOOA" value="EPS2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSZEME07EeuDP5XTX0eOOA" name="Sort_By_Anti_Tag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSZrQU07EeuDP5XTX0eOOA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSZrQk07EeuDP5XTX0eOOA" name="Sort_By_Area">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSZrRU07EeuDP5XTX0eOOA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSZrRk07EeuDP5XTX0eOOA" name="Sort_By_Anti_Area">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSZrSU07EeuDP5XTX0eOOA" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSZrSk07EeuDP5XTX0eOOA" name="Sort_By_Perimeter">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSaSUU07EeuDP5XTX0eOOA" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSaSUk07EeuDP5XTX0eOOA" name="Sort_By_Anti_Perimeter">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSaSVU07EeuDP5XTX0eOOA" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSaSVk07EeuDP5XTX0eOOA" name="Sort_By_toString">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSaSWU07EeuDP5XTX0eOOA" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSaSWk07EeuDP5XTX0eOOA" name="Height">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSaSXU07EeuDP5XTX0eOOA" value="512"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_f2WBYE07EeuDP5XTX0eOOA" name="Ex4_GUI">
        <ownedComment xmi:id="_gSa5YE07EeuDP5XTX0eOOA">
          <body>This interface represents a simple GUI drawer which uses StdDraw to draw a gui_shape_collection. 
 Ex4: you should NOT change this interface!
@author boaz.benmoshe</body>
        </ownedComment>
        <ownedAttribute xmi:id="_f2ZEsE07EeuDP5XTX0eOOA" name="shape_Collection" type="_f3DzEE07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTFAsE07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_f2d9ME07EeuDP5XTX0eOOA" name="info" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_f2cvEE07EeuDP5XTX0eOOA" name="show"/>
        <ownedOperation xmi:id="_gOPkAE07EeuDP5XTX0eOOA" name="init">
          <ownedParameter xmi:id="_gOQLEE07EeuDP5XTX0eOOA" name="g" type="_f3DzEE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_f2yGQE07EeuDP5XTX0eOOA" name="GUI_Shape">
        <ownedAttribute xmi:id="_f22XsE07EeuDP5XTX0eOOA" name="shape" type="_f4hysE07EeuDP5XTX0eOOA" association="_gScukE07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_f27QME07EeuDP5XTX0eOOA" name="filled">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_f28eUE07EeuDP5XTX0eOOA" name="color" type="_gM_m0E07EeuDP5XTX0eOOA" association="_gSejwE07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_f29scE07EeuDP5XTX0eOOA" name="tag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_f2-TgE07EeuDP5XTX0eOOA" name="copy">
          <ownedParameter xmi:id="_gObxQE07EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f2-6kE07EeuDP5XTX0eOOA" name="toString">
          <ownedParameter xmi:id="_f2_hoE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_f3DzEE07EeuDP5XTX0eOOA" name="GUI_Shape_Collection">
        <ownedComment xmi:id="_gSejwk07EeuDP5XTX0eOOA">
          <body>This interface represents a collection of gui_shapes with the following capabilities:
1. add a gui_shape at a given location.
2. get a gui_shape at a given location.
3. remove a single or all gui_shapes.
4. sort the gui_shapes according to shape Comparator
5. computes the bounding box containing all the shapes as a minimal 2D rectangle.
 Ex4: you should NOT change this interface!
@author boaz.benmoshe
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_f3bmgE07EeuDP5XTX0eOOA" name="boundingBox" type="_f6s88E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTFnwU07EeuDP5XTX0eOOA"/>
        <ownedOperation xmi:id="_f3IrkE07EeuDP5XTX0eOOA" name="get">
          <ownedComment xmi:id="_gSejw007EeuDP5XTX0eOOA">
            <body>This method return a reference to the i'th element in the collection.
	 * @param i - the index of the element
	 * @return a reference (NOT a copy) for the i'th element in the collection.</body>
          </ownedComment>
          <ownedParameter xmi:id="_f3J5sE07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gOh34E07EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f3MV8E07EeuDP5XTX0eOOA" name="size">
          <ownedComment xmi:id="_gSejxE07EeuDP5XTX0eOOA">
            <body>return the size of the collection (if empty return 0).
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_f3OLIE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f3PZQE07EeuDP5XTX0eOOA" name="removeElementAt">
          <ownedComment xmi:id="_gSejxU07EeuDP5XTX0eOOA">
            <body>This method remove (and return) the gui_shape at the i'th location.
	 * After removing the size of this collection decreases (by 1) and the order (of the elements) remains the same - just with out the removed element.
	 * @param i - the index of the element to be removed.
	 * @return the gui_shape which was removed</body>
          </ownedComment>
          <ownedParameter xmi:id="_f3QAUE07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gOie8E07EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f3WG8E07EeuDP5XTX0eOOA" name="copy">
          <ownedComment xmi:id="_gSejyE07EeuDP5XTX0eOOA">
            <body>This method constructs a deep copy of this collection.
	 * Note: the two collections are equal - yet they have no shared memory. 
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_gOjtE007EeuDP5XTX0eOOA" type="_f3DzEE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f3YjME07EeuDP5XTX0eOOA" name="removeAll">
          <ownedComment xmi:id="_gSejyk07EeuDP5XTX0eOOA">
            <body>This method simple removes all the elements from this collection.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f3ZxUE07EeuDP5XTX0eOOA" name="save">
          <ownedComment xmi:id="_gSejy007EeuDP5XTX0eOOA">
            <body>This method saves this gui_shape collection to a text file.
	 * @param file_name - the file name in which this collection will be saved.</body>
          </ownedComment>
          <ownedParameter xmi:id="_f3ZxUU07EeuDP5XTX0eOOA" name="file_name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f3aYYE07EeuDP5XTX0eOOA" name="load">
          <ownedComment xmi:id="_gSejzE07EeuDP5XTX0eOOA">
            <body>This method restore a gui_shape collection from text file (as saved be the save method).
	 * Note this method changes the this collection.
	 * @param file - the name of the text file to create a gui shape file from.
	 * @return a new gui_shape collection (from file).</body>
          </ownedComment>
          <ownedParameter xmi:id="_f3a_cE07EeuDP5XTX0eOOA" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gOie8U07EeuDP5XTX0eOOA" name="add" visibility="package">
          <ownedComment xmi:id="_gSejxk07EeuDP5XTX0eOOA">
            <body>This method adds the gui_element s to this collection in the last position.
	 * Note: the method adds s &quot;as is&quot; (NOT a new copy of s).
	 * @param s - the gui_shape</body>
          </ownedComment>
          <ownedParameter xmi:id="_gOie8k07EeuDP5XTX0eOOA" name="s" type="_f2yGQE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gOjtEE07EeuDP5XTX0eOOA" name="addAt">
          <ownedComment xmi:id="_gSejx007EeuDP5XTX0eOOA">
            <body>This method adds the gui_element s to this collection in the i'th position.
	 * Note: the method adds s &quot;as is&quot; (NOT a new copy of s).
	 * @param s - the gui_shape
	 * @param i - the location (index) in which s should be added</body>
          </ownedComment>
          <ownedParameter xmi:id="_gOjtEU07EeuDP5XTX0eOOA" name="s" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gOjtEk07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gQRkUE07EeuDP5XTX0eOOA" name="sort">
          <ownedComment xmi:id="_gSejyU07EeuDP5XTX0eOOA">
            <body>This method sorts this gui_shape collection according to the comp Comparator - in increasing order.
	 * 
	 * @param comp a linear order over gui_sahpes as defined in java.util.Comparator</body>
          </ownedComment>
          <ownedParameter xmi:id="_gQRkUU07EeuDP5XTX0eOOA" name="comp" type="_gOeNgE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_f3gfAE07EeuDP5XTX0eOOA" name="Shape_Collection">
        <ownedComment xmi:id="_gSejzU07EeuDP5XTX0eOOA">
          <body>This class represents a collection of GUI_Shape.
Ex4: you should implement this class!
@author I2CS
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gQ_WAE07EeuDP5XTX0eOOA" name="_shapes" visibility="private" type="_gOnXcE07EeuDP5XTX0eOOA" association="_gTGO1007EeuDP5XTX0eOOA"/>
        <interfaceRealization xmi:id="_gOxvgE07EeuDP5XTX0eOOA" client="_f3gfAE07EeuDP5XTX0eOOA" supplier="_f3DzEE07EeuDP5XTX0eOOA" contract="_f3DzEE07EeuDP5XTX0eOOA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRyAM007EeuDP5XTX0eOOA" name="Shape_Collection" specification="_f3lXgE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRyANE07EeuDP5XTX0eOOA" type="_f3gfAE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>_shapes = new ArrayList&lt;GUI_Shape>();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynQE07EeuDP5XTX0eOOA" name="get" specification="_f3oa0E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRynQU07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gRynQk07EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>return _shapes.get(i);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynQ007EeuDP5XTX0eOOA" name="size" specification="_f3ssQE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRynRE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _shapes.size();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynRU07EeuDP5XTX0eOOA" name="removeElementAt" specification="_f30oEE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRynRk07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gRynR007EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>return _shapes.remove(i);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynSE07EeuDP5XTX0eOOA" name="addAt" specification="_gO0y0E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRynSU07EeuDP5XTX0eOOA" name="s" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gRynSk07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>_shapes.add(i, s);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynS007EeuDP5XTX0eOOA" name="add" specification="_gO3PEU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRynTE07EeuDP5XTX0eOOA" name="s" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>_shapes.add(s);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynTU07EeuDP5XTX0eOOA" name="copy" specification="_f33rYE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRynTk07EeuDP5XTX0eOOA" type="_f3DzEE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>GUI_Shape_Collection ans = new Shape_Collection();
		for(int i=0;i&lt;this.size();i++) {
			GUI_Shape s = this.get(i).copy();
			ans.addAt(s, i);
		}
		return ans;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynT007EeuDP5XTX0eOOA" name="sort" specification="_gQUAkE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRynUE07EeuDP5XTX0eOOA" name="comp" type="_gOeNgE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>_shapes.sort(comp);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRynUU07EeuDP5XTX0eOOA" name="removeAll" specification="_f39yAE07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>_shapes.clear();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRzOUE07EeuDP5XTX0eOOA" name="save" specification="_f4A1UE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRzOUU07EeuDP5XTX0eOOA" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>try {
		      FileWriter myWriter = new FileWriter(file);
		      for(int i=0;i&lt;size();i=i+1) {
		    	  myWriter.write(get(i).toString()+&quot;\n&quot;);
		      }
		      myWriter.close();
		 }
		 catch(Exception e) {
			 e.printStackTrace();
		 }
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRzOUk07EeuDP5XTX0eOOA" name="load" specification="_f4DRkE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRzOU007EeuDP5XTX0eOOA" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>try {
		     File myObj = new File(file);
		      Scanner myReader = new Scanner(myObj);
		      this._shapes.clear();
		      while (myReader.hasNextLine()) {
		        String data = myReader.nextLine();
		        GUI_Shape g = new GUIShape(data);
		        this._shapes.add(g);
		      }
		      myReader.close();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRzOVE07EeuDP5XTX0eOOA" name="getBoundingBox" specification="_f4G78U07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRzOVU07EeuDP5XTX0eOOA" type="_f6s88E07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>Rect2D ans = null;
		double x0=0,x1=0,y0=0,y1=0;
		boolean first = true;
		for(int i=0;i&lt;size();i=i+1) {
			GeoShape g = this.get(i).getShape();
			Point2D[] arr = g.getPoints();
			if(g instanceof Circle2D) {
				double r = arr[0].distance(arr[1]);
				Point2D min = new Point2D(arr[0].x()-r, arr[0].y()-r);
				Point2D max = new Point2D(arr[0].x()+r, arr[0].y()+r);
				arr[0] = min; arr[1]=max;
			}
			System.out.println(g+&quot; &quot;+arr.length);
			for(int a = 0;a&lt;arr.length;a=a+1) {
				if(first) {x0=arr[0].x();x1=x0;y0=arr[0].y();y1=y0;first=false;}
				double x = arr[a].x();
				double y = arr[a].y();
				if(x&lt;x0) {x0=x;}
				if(x>x1) {x1=x;}
				if(y&lt;y0) {y0=y;}
				if(y>y1) {y1=y;}
			}
		}
		Point2D min = new Point2D(x0,y0);
		Point2D max = new Point2D(x1,y1);
		ans = new Rect2D(min,max);
		return ans;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gRzOVk07EeuDP5XTX0eOOA" name="toString" specification="_f4NCkE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gRzOV007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String ans = &quot;&quot;;
		for(int i=0;i&lt;size();i=i+1) {
			ans += this.get(i);
		}
		return ans;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_f3lXgE07EeuDP5XTX0eOOA" name="Shape_Collection" method="_gRyAM007EeuDP5XTX0eOOA">
          <eAnnotations xmi:id="_f3lXgU07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_f3mloE07EeuDP5XTX0eOOA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_f3nMsE07EeuDP5XTX0eOOA" type="_f3gfAE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f3oa0E07EeuDP5XTX0eOOA" name="get" method="_gRynQE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f3oa0U07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gOzksE07EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f3ssQE07EeuDP5XTX0eOOA" name="size" method="_gRynQ007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f3t6YE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f30oEE07EeuDP5XTX0eOOA" name="removeElementAt" method="_gRynRU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f30oEU07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gO0LwE07EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f33rYE07EeuDP5XTX0eOOA" name="copy" method="_gRynTU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gO4dME07EeuDP5XTX0eOOA" type="_f3DzEE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f39yAE07EeuDP5XTX0eOOA" name="removeAll" method="_gRynUU07EeuDP5XTX0eOOA"/>
        <ownedOperation xmi:id="_f4A1UE07EeuDP5XTX0eOOA" name="save" method="_gRzOUE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f4A1UU07EeuDP5XTX0eOOA" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f4DRkE07EeuDP5XTX0eOOA" name="load" method="_gRzOUk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f4D4oE07EeuDP5XTX0eOOA" name="file">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f4G78U07EeuDP5XTX0eOOA" name="getBoundingBox" method="_gRzOVE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gO4dMU07EeuDP5XTX0eOOA" type="_f6s88E07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f4NCkE07EeuDP5XTX0eOOA" name="toString" method="_gRzOVk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f4OQsE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gO0y0E07EeuDP5XTX0eOOA" name="addAt" method="_gRynSE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gO0y0U07EeuDP5XTX0eOOA" name="s" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gO0y0k07EeuDP5XTX0eOOA" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gO3PEU07EeuDP5XTX0eOOA" name="add" method="_gRynS007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gO32IE07EeuDP5XTX0eOOA" name="s" type="_f2yGQE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQUAkE07EeuDP5XTX0eOOA" name="sort" method="_gRynT007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQUAkU07EeuDP5XTX0eOOA" name="comp" type="_gOeNgE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_f4WzkE07EeuDP5XTX0eOOA" name="Shape_Comp">
        <ownedComment xmi:id="_gSfK0E07EeuDP5XTX0eOOA">
          <body>This class represents a Comparator over GUI_Shapes - 
as a linear order over GUI_Shapes.
Ex4: you should implement this class!
@author I2CS
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gRAkIE07EeuDP5XTX0eOOA" name="_flag" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_gQUnok07EeuDP5XTX0eOOA" client="_f4WzkE07EeuDP5XTX0eOOA" supplier="_gOeNgE07EeuDP5XTX0eOOA" contract="_gOeNgE07EeuDP5XTX0eOOA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR2RoE07EeuDP5XTX0eOOA" name="Shape_Comp" specification="_f4eIUE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gR2RoU07EeuDP5XTX0eOOA" name="flag">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gR2Rok07EeuDP5XTX0eOOA" type="_f4WzkE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>_flag = flag;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gR4t4E07EeuDP5XTX0eOOA" name="compare" specification="_gO5rUE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gR4t4U07EeuDP5XTX0eOOA" name="o1" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gR4t4k07EeuDP5XTX0eOOA" name="o2" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gR4t4007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>double a1=-1, a2 = -1;
		GeoShape s1 = o1.getShape(), s2 = o2.getShape();
		int ans =0;
		if(_flag == Ex4_Const.Sort_By_Area) {
			a1 = s1.area();
			a2 = s2.area();
		}
		if(_flag == Ex4_Const.Sort_By_Anti_Area) {
			a2 = s1.area();
			a1 = s2.area();
		}
		if(_flag == Ex4_Const.Sort_By_Perimeter) {
			a1 = s1.perimeter();
			a2 = s2.perimeter();
		}
		if(_flag == Ex4_Const.Sort_By_Anti_Perimeter) {
			a2 = s1.perimeter();
			a1 = s2.perimeter();
		}
		if(_flag == Ex4_Const.Sort_By_Tag) {
			a1 = o1.getTag();
			a2 = o2.getTag();
		}
		if(_flag == Ex4_Const.Sort_By_Anti_Tag) {
			a2 = o1.getTag();
			a1 = o2.getTag();
		}
		if(a1>a2) {ans=1;}
		if(a1&lt;a2) {ans=-1;}
		
		if(_flag == Ex4_Const.Sort_By_toString) {
			ans = o1.toString().compareTo(o2.toString());
		}
		return ans;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_f4eIUE07EeuDP5XTX0eOOA" name="Shape_Comp" method="_gR2RoE07EeuDP5XTX0eOOA">
          <eAnnotations xmi:id="_f4evYU07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_f4fWcE07EeuDP5XTX0eOOA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_f4evYE07EeuDP5XTX0eOOA" name="flag">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f4fWcU07EeuDP5XTX0eOOA" type="_f4WzkE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gO5rUE07EeuDP5XTX0eOOA" name="compare" method="_gR4t4E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gO5rUU07EeuDP5XTX0eOOA" name="o1" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gO6SYE07EeuDP5XTX0eOOA" name="o2" type="_f2yGQE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gO6SYU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_f42i0E07EeuDP5XTX0eOOA" name="StdDraw" isLeaf="true">
        <ownedComment xmi:id="_gSfK2k07EeuDP5XTX0eOOA">
          <body>Ex4: you can update this class!</body>
        </ownedComment>
        <ownedAttribute xmi:id="_gRCZUE07EeuDP5XTX0eOOA" name="BLACK" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTG15E07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRCZUU07EeuDP5XTX0eOOA" value="Color.BLACK"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRCZUk07EeuDP5XTX0eOOA" name="BLUE" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTHc8U07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRCZU007EeuDP5XTX0eOOA" value="Color.BLUE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRCZVE07EeuDP5XTX0eOOA" name="CYAN" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTHc9E07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRCZVU07EeuDP5XTX0eOOA" value="Color.CYAN"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRCZVk07EeuDP5XTX0eOOA" name="DARK_GRAY" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTHc9007EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRCZV007EeuDP5XTX0eOOA" value="Color.DARK_GRAY"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDAYE07EeuDP5XTX0eOOA" name="GRAY" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTIEAU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDAYU07EeuDP5XTX0eOOA" value="Color.GRAY"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDAYk07EeuDP5XTX0eOOA" name="GREEN" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTIEBE07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDAY007EeuDP5XTX0eOOA" value="Color.GREEN"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDAZE07EeuDP5XTX0eOOA" name="LIGHT_GRAY" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTIEB007EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDAZU07EeuDP5XTX0eOOA" value="Color.LIGHT_GRAY"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDAZk07EeuDP5XTX0eOOA" name="MAGENTA" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTIrEU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDAZ007EeuDP5XTX0eOOA" value="Color.MAGENTA"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDncE07EeuDP5XTX0eOOA" name="ORANGE" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTIrFE07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDncU07EeuDP5XTX0eOOA" value="Color.ORANGE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDnck07EeuDP5XTX0eOOA" name="PINK" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTIrF007EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDnc007EeuDP5XTX0eOOA" value="Color.PINK"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDndE07EeuDP5XTX0eOOA" name="RED" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTLHUU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDndU07EeuDP5XTX0eOOA" value="Color.RED"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDndk07EeuDP5XTX0eOOA" name="WHITE" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTLuYU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRDnd007EeuDP5XTX0eOOA" value="Color.WHITE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRDneE07EeuDP5XTX0eOOA" name="YELLOW" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTLuZE07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gREOgE07EeuDP5XTX0eOOA" value="Color.YELLOW"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gREOgU07EeuDP5XTX0eOOA" name="BOOK_BLUE" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTMVcU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gREOgk07EeuDP5XTX0eOOA" value="new Color(9, 90, 166)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gREOg007EeuDP5XTX0eOOA" name="BOOK_LIGHT_BLUE" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTMVdE07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gREOhE07EeuDP5XTX0eOOA" value="new Color(103, 198, 243)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gREOhU07EeuDP5XTX0eOOA" name="BOOK_RED" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTM8gU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gREOhk07EeuDP5XTX0eOOA" value="new Color(150, 35, 31)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gREOh007EeuDP5XTX0eOOA" name="PRINCETON_ORANGE" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTM8hE07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gREOiE07EeuDP5XTX0eOOA" value="new Color(245, 128, 37)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gREOiU07EeuDP5XTX0eOOA" name="Select_Mode" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gREOik07EeuDP5XTX0eOOA" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRFcoE07EeuDP5XTX0eOOA" name="DEFAULT_PEN_COLOR" visibility="private" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTM8h007EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRGDsE07EeuDP5XTX0eOOA" value="BLACK"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRGDsU07EeuDP5XTX0eOOA" name="DEFAULT_CLEAR_COLOR" visibility="private" isLeaf="true" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTNjkU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRGDsk07EeuDP5XTX0eOOA" value="WHITE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRGDs007EeuDP5XTX0eOOA" name="penColor" isStatic="true" type="_gM_m0E07EeuDP5XTX0eOOA" association="_gTNjlE07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_gRKVIU07EeuDP5XTX0eOOA" name="DEFAULT_SIZE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRK8ME07EeuDP5XTX0eOOA" value="512"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRLjQE07EeuDP5XTX0eOOA" name="width" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRLjQU07EeuDP5XTX0eOOA" value="DEFAULT_SIZE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRMKUU07EeuDP5XTX0eOOA" name="height" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRMKUk07EeuDP5XTX0eOOA" value="DEFAULT_SIZE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRMxYU07EeuDP5XTX0eOOA" name="DEFAULT_PEN_RADIUS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRMxYk07EeuDP5XTX0eOOA" value="0.002"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRMxY007EeuDP5XTX0eOOA" name="penRadius" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRN_gE07EeuDP5XTX0eOOA" name="defer" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRN_gU07EeuDP5XTX0eOOA" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRN_g007EeuDP5XTX0eOOA" name="BORDER" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRN_hE07EeuDP5XTX0eOOA" value="0.00"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRN_hU07EeuDP5XTX0eOOA" name="DEFAULT_XMIN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRN_hk07EeuDP5XTX0eOOA" value="0.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gROmkE07EeuDP5XTX0eOOA" name="DEFAULT_XMAX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gROmkU07EeuDP5XTX0eOOA" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gROmkk07EeuDP5XTX0eOOA" name="DEFAULT_YMIN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gROmk007EeuDP5XTX0eOOA" value="0.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gROmlE07EeuDP5XTX0eOOA" name="DEFAULT_YMAX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gROmlU07EeuDP5XTX0eOOA" value="1.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gROmlk07EeuDP5XTX0eOOA" name="xmin" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRPNoE07EeuDP5XTX0eOOA" name="mouseLock" visibility="private" isStatic="true" type="_gQYSAU07EeuDP5XTX0eOOA" association="_gTNjl007EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRPNoU07EeuDP5XTX0eOOA" value="new Object()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRPNo007EeuDP5XTX0eOOA" name="keyLock" visibility="private" isStatic="true" type="_gQYSAU07EeuDP5XTX0eOOA" association="_gTOKoU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRPNpE07EeuDP5XTX0eOOA" value="new Object()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRP0sE07EeuDP5XTX0eOOA" name="DEFAULT_FONT" visibility="private" isLeaf="true" isStatic="true" type="_gPIU0E07EeuDP5XTX0eOOA" isReadOnly="true" association="_gTOKpE07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRP0sU07EeuDP5XTX0eOOA" value="new Font(&quot;SansSerif&quot;, Font.PLAIN, 16)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRP0sk07EeuDP5XTX0eOOA" name="font" visibility="private" isStatic="true" type="_gPIU0E07EeuDP5XTX0eOOA" association="_gTOKp007EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_gRP0tE07EeuDP5XTX0eOOA" name="offscreenImage" visibility="private" isStatic="true" type="_gPZakU07EeuDP5XTX0eOOA" association="_gTOxsU07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_gRQbwE07EeuDP5XTX0eOOA" name="offscreen" visibility="private" isStatic="true" type="_gPL_ME07EeuDP5XTX0eOOA" association="_gTOxtE07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_gRQbw007EeuDP5XTX0eOOA" name="std" visibility="private" isStatic="true" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTOxt007EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRQbxE07EeuDP5XTX0eOOA" value="new StdDraw()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRRC0E07EeuDP5XTX0eOOA" name="frame" visibility="private" isStatic="true" type="_gPgIQU07EeuDP5XTX0eOOA" association="_gTPYwU07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_gRRC0k07EeuDP5XTX0eOOA" name="isMousePressed" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRRC0007EeuDP5XTX0eOOA" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRRC1U07EeuDP5XTX0eOOA" name="mouseX" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRRC1k07EeuDP5XTX0eOOA" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRRp4U07EeuDP5XTX0eOOA" name="mouseY" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRRp4k07EeuDP5XTX0eOOA" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRSQ8U07EeuDP5XTX0eOOA" name="keysTyped" visibility="private" isStatic="true" type="_gPbPw007EeuDP5XTX0eOOA" association="_gTPYxE07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRS4AU07EeuDP5XTX0eOOA" value="new LinkedList&lt;Character>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRS4A007EeuDP5XTX0eOOA" name="keysDown" visibility="private" isStatic="true" type="_gPb20E07EeuDP5XTX0eOOA" association="_gTQm4E07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRTfEU07EeuDP5XTX0eOOA" value="new TreeSet&lt;Integer>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSfK2007EeuDP5XTX0eOOA" name="Circle_Mode0">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSfx4k07EeuDP5XTX0eOOA" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSfx4007EeuDP5XTX0eOOA" name="Circle_Mode1">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSfx5k07EeuDP5XTX0eOOA" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSgY8E07EeuDP5XTX0eOOA" name="Set_Color_Mode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSgY8007EeuDP5XTX0eOOA" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSgY9E07EeuDP5XTX0eOOA" name="Remove_Mode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gSgY9007EeuDP5XTX0eOOA" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gShAAE07EeuDP5XTX0eOOA" name="ymin" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSiOIE07EeuDP5XTX0eOOA" name="xmax" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSiOI007EeuDP5XTX0eOOA" name="ymax" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gSi1ME07EeuDP5XTX0eOOA" name="onscreenImage" visibility="private" type="_gPZakU07EeuDP5XTX0eOOA" association="_gTR1B007EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_gSjcQk07EeuDP5XTX0eOOA" name="onscreen" visibility="private" type="_gPL_ME07EeuDP5XTX0eOOA" association="_gTScEU07EeuDP5XTX0eOOA"/>
        <interfaceRealization xmi:id="_gQV1wE07EeuDP5XTX0eOOA" client="_f42i0E07EeuDP5XTX0eOOA" supplier="_gPUiEE07EeuDP5XTX0eOOA" contract="_gPUiEE07EeuDP5XTX0eOOA"/>
        <interfaceRealization xmi:id="_gQWc0E07EeuDP5XTX0eOOA" client="_f42i0E07EeuDP5XTX0eOOA" supplier="_gPVJIk07EeuDP5XTX0eOOA" contract="_gPVJIk07EeuDP5XTX0eOOA"/>
        <interfaceRealization xmi:id="_gQWc0U07EeuDP5XTX0eOOA" client="_f42i0E07EeuDP5XTX0eOOA" supplier="_gPWXQU07EeuDP5XTX0eOOA" contract="_gPWXQU07EeuDP5XTX0eOOA"/>
        <interfaceRealization xmi:id="_gQWc0k07EeuDP5XTX0eOOA" client="_f42i0E07EeuDP5XTX0eOOA" supplier="_gPW-U007EeuDP5XTX0eOOA" contract="_gPW-U007EeuDP5XTX0eOOA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDF8k07EeuDP5XTX0eOOA" name="_initializer1" specification="_f5QLcE07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>init();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtAE07EeuDP5XTX0eOOA" name="setCanvasSize" specification="_f5QygU07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>setCanvasSize(DEFAULT_SIZE, DEFAULT_SIZE);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtAU07EeuDP5XTX0eOOA" name="setCanvasSize" specification="_f5RZkE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSDtAk07EeuDP5XTX0eOOA" name="canvasWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSDtA007EeuDP5XTX0eOOA" name="canvasHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if (canvasWidth &lt;= 0 || canvasHeight &lt;= 0)
			throw new IllegalArgumentException(&quot;width and height must be positive&quot;);
		width = canvasWidth;
		height = canvasHeight;
		init();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtBE07EeuDP5XTX0eOOA" name="init" specification="_f5RZk007EeuDP5XTX0eOOA">
          <language>java</language>
          <body>if (frame != null) frame.setVisible(false);
		frame = new JFrame();
		offscreenImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
		onscreenImage  = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
		offscreen = offscreenImage.createGraphics();
		onscreen  = onscreenImage.createGraphics();
		setXscale();
		setYscale();
		offscreen.setColor(DEFAULT_CLEAR_COLOR);
		offscreen.fillRect(0, 0, width, height);
		setPenColor();
		setPenRadius();
		setFont();
		clear();

		// add antialiasing
		RenderingHints hints = new RenderingHints(RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);
		hints.put(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
		offscreen.addRenderingHints(hints);

		// frame stuff
		ImageIcon icon = new ImageIcon(onscreenImage);
		JLabel draw = new JLabel(icon);

		draw.addMouseListener(std);
		draw.addMouseMotionListener(std);

		frame.setContentPane(draw);
		frame.addKeyListener(std);    // JLabel cannot get keyboard focus
		frame.setResizable(false);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);            // closes all windows
		// frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);      // closes only current window
		frame.setTitle(&quot;Standard Draw&quot;);
		frame.setJMenuBar(createMenuBar());
		frame.pack();
		frame.requestFocusInWindow();
		frame.setVisible(true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtBU07EeuDP5XTX0eOOA" name="createMenuBar" specification="_f5SAoE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSDtBk07EeuDP5XTX0eOOA" type="_gPgvVE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>JMenuBar menuBar = new JMenuBar();
		JMenu menu = new JMenu(&quot;File&quot;);
		menuBar.add(menu);
		JMenuItem menuItem1 = new JMenuItem(&quot;Save&quot;);
		menuItem1.addActionListener(std);
		menuItem1.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S,
				Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()));
		menuItem1.addActionListener(std);
		menu.add(menuItem1);
		menu = new JMenu(&quot;Edit&quot;);
		menuBar.add(menu);
		menuItem1 = new JMenuItem(&quot;Circle&quot;);
		menuItem1.addActionListener(std);
		menu.add(menuItem1);
		return menuBar;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtB007EeuDP5XTX0eOOA" name="setXscale" specification="_f5TOwE07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>setXscale(DEFAULT_XMIN, DEFAULT_XMAX);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtCE07EeuDP5XTX0eOOA" name="setYscale" specification="_f5T10E07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>setYscale(DEFAULT_YMIN, DEFAULT_YMAX);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtCU07EeuDP5XTX0eOOA" name="setScale" specification="_f5T10U07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>setXscale();
		setYscale();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtCk07EeuDP5XTX0eOOA" name="setXscale" specification="_f5T10k07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSDtC007EeuDP5XTX0eOOA" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSDtDE07EeuDP5XTX0eOOA" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double size = max - min;
		if (size == 0.0) throw new IllegalArgumentException(&quot;the min and max are the same&quot;);
		synchronized (mouseLock) {
			xmin = min - BORDER * size;
			xmax = max + BORDER * size;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtDU07EeuDP5XTX0eOOA" name="setYscale" specification="_f5Uc4E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSDtDk07EeuDP5XTX0eOOA" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSDtD007EeuDP5XTX0eOOA" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double size = max - min;
		if (size == 0.0) throw new IllegalArgumentException(&quot;the min and max are the same&quot;);
		synchronized (mouseLock) {
			ymin = min - BORDER * size;
			ymax = max + BORDER * size;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSDtEE07EeuDP5XTX0eOOA" name="setScale" specification="_f5Uc4007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSDtEU07EeuDP5XTX0eOOA" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSDtEk07EeuDP5XTX0eOOA" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double size = max - min;
		if (size == 0.0) throw new IllegalArgumentException(&quot;the min and max are the same&quot;);
		synchronized (mouseLock) {
			xmin = min - BORDER * size;
			xmax = max + BORDER * size;
			ymin = min - BORDER * size;
			ymax = max + BORDER * size;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUEE07EeuDP5XTX0eOOA" name="scaleX" specification="_f5VD8U07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUEU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSEUEk07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return width  * (x - xmin) / (xmax - xmin); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUE007EeuDP5XTX0eOOA" name="scaleY" specification="_f5VrAU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUFE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSEUFU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return height * (ymax - y) / (ymax - ymin); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUFk07EeuDP5XTX0eOOA" name="factorX" specification="_f5WSEU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUF007EeuDP5XTX0eOOA" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSEUGE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return w * width  / Math.abs(xmax - xmin);  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUGU07EeuDP5XTX0eOOA" name="factorY" specification="_f5W5IU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUGk07EeuDP5XTX0eOOA" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSEUG007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return h * height / Math.abs(ymax - ymin);  </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUHE07EeuDP5XTX0eOOA" name="userX" specification="_f5W5JE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUHU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSEUHk07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return xmin + x * (xmax - xmin) / width;    </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUH007EeuDP5XTX0eOOA" name="userY" specification="_f5XgME07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUIE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSEUIU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return ymax - y * (ymax - ymin) / height;   </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUIk07EeuDP5XTX0eOOA" name="clear" specification="_f5XgM007EeuDP5XTX0eOOA">
          <language>java</language>
          <body>clear(DEFAULT_CLEAR_COLOR);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUI007EeuDP5XTX0eOOA" name="clear" specification="_gQZgIU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUJE07EeuDP5XTX0eOOA" name="color" type="_gM_m0E07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>offscreen.setColor(color);
		offscreen.fillRect(0, 0, width, height);
		offscreen.setColor(penColor);
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUJU07EeuDP5XTX0eOOA" name="setPenRadius" specification="_f5XgNE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSEUJk07EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(radius >= 0)) throw new IllegalArgumentException(&quot;pen radius must be nonnegative&quot;);
		penRadius = radius;
		float scaledPenRadius = (float) (radius * DEFAULT_SIZE);
		BasicStroke stroke = new BasicStroke(scaledPenRadius, BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND);
		// BasicStroke stroke = new BasicStroke(scaledPenRadius);
		offscreen.setStroke(stroke);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSEUJ007EeuDP5XTX0eOOA" name="setPenColor" specification="_f5YHQE07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>setPenColor(DEFAULT_PEN_COLOR);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSE7IE07EeuDP5XTX0eOOA" name="setPenColor" specification="_gQaHME07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSE7IU07EeuDP5XTX0eOOA" name="color" type="_gM_m0E07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>if (color == null) throw new IllegalArgumentException();
		penColor = color;
		offscreen.setColor(penColor);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSFiME07EeuDP5XTX0eOOA" name="getFont" specification="_f5YuUE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSFiMU07EeuDP5XTX0eOOA" type="_gPIU0E07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>return font;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSFiMk07EeuDP5XTX0eOOA" name="setFont" specification="_f5YuUU07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>setFont(DEFAULT_FONT);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSFiM007EeuDP5XTX0eOOA" name="setFont" specification="_gQaHM007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSFiNE07EeuDP5XTX0eOOA" name="font" type="_gPIU0E07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>if (font == null) throw new IllegalArgumentException();
		StdDraw.font = font;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSFiNU07EeuDP5XTX0eOOA" name="line" specification="_f5ZVYE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSFiNk07EeuDP5XTX0eOOA" name="x0">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSFiN007EeuDP5XTX0eOOA" name="y0">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSFiOE07EeuDP5XTX0eOOA" name="x1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSFiOU07EeuDP5XTX0eOOA" name="y1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>offscreen.draw(new Line2D.Double(scaleX(x0), scaleY(y0), scaleX(x1), scaleY(y1)));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSFiOk07EeuDP5XTX0eOOA" name="pixel" specification="_f5bKkE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSFiO007EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSFiPE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>offscreen.fillRect((int) Math.round(scaleX(x)), (int) Math.round(scaleY(y)), 1, 1);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSFiPU07EeuDP5XTX0eOOA" name="point" specification="_f5bKk007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSFiPk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSFiP007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double xs = scaleX(x);
		double ys = scaleY(y);
		double r = penRadius;
		float scaledPenRadius = (float) (r * DEFAULT_SIZE);

		// double ws = factorX(2*r);
		// double hs = factorY(2*r);
		// if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		if (scaledPenRadius &lt;= 1) pixel(x, y);
		else offscreen.fill(new Ellipse2D.Double(xs - scaledPenRadius/2, ys - scaledPenRadius/2,
				scaledPenRadius, scaledPenRadius));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSGJQE07EeuDP5XTX0eOOA" name="circle" specification="_f5bxoE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSGJQU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJQk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJQ007EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(radius >= 0)) throw new IllegalArgumentException(&quot;radius must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*radius);
		double hs = factorY(2*radius);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.draw(new Ellipse2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSGJRE07EeuDP5XTX0eOOA" name="filledCircle" specification="_f5bxpE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSGJRU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJRk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJR007EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(radius >= 0)) throw new IllegalArgumentException(&quot;radius must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*radius);
		double hs = factorY(2*radius);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.fill(new Ellipse2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSGJSE07EeuDP5XTX0eOOA" name="ellipse" specification="_f5c_wU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSGJSU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJSk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJS007EeuDP5XTX0eOOA" name="semiMajorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJTE07EeuDP5XTX0eOOA" name="semiMinorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(semiMajorAxis >= 0)) throw new IllegalArgumentException(&quot;ellipse semimajor axis must be nonnegative&quot;);
		if (!(semiMinorAxis >= 0)) throw new IllegalArgumentException(&quot;ellipse semiminor axis must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*semiMajorAxis);
		double hs = factorY(2*semiMinorAxis);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.draw(new Ellipse2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSGJTU07EeuDP5XTX0eOOA" name="filledEllipse" specification="_f5dm1E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSGJTk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJT007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJUE07EeuDP5XTX0eOOA" name="semiMajorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJUU07EeuDP5XTX0eOOA" name="semiMinorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(semiMajorAxis >= 0)) throw new IllegalArgumentException(&quot;ellipse semimajor axis must be nonnegative&quot;);
		if (!(semiMinorAxis >= 0)) throw new IllegalArgumentException(&quot;ellipse semiminor axis must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*semiMajorAxis);
		double hs = factorY(2*semiMinorAxis);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.fill(new Ellipse2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSGJUk07EeuDP5XTX0eOOA" name="arc" specification="_f5eN4U07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSGJU007EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJVE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJVU07EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJVk07EeuDP5XTX0eOOA" name="angle1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJV007EeuDP5XTX0eOOA" name="angle2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (radius &lt; 0) throw new IllegalArgumentException(&quot;arc radius must be nonnegative&quot;);
		while (angle2 &lt; angle1) angle2 += 360;
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*radius);
		double hs = factorY(2*radius);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.draw(new Arc2D.Double(xs - ws/2, ys - hs/2, ws, hs, angle1, angle2 - angle1, Arc2D.OPEN));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSGJWE07EeuDP5XTX0eOOA" name="square" specification="_f5e09E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSGJWU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJWk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSGJW007EeuDP5XTX0eOOA" name="halfLength">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(halfLength >= 0)) throw new IllegalArgumentException(&quot;half length must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*halfLength);
		double hs = factorY(2*halfLength);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.draw(new Rectangle2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSHXYE07EeuDP5XTX0eOOA" name="filledSquare" specification="_f5fcAE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSHXYU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXYk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXY007EeuDP5XTX0eOOA" name="halfLength">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(halfLength >= 0)) throw new IllegalArgumentException(&quot;half length must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*halfLength);
		double hs = factorY(2*halfLength);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.fill(new Rectangle2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSHXZE07EeuDP5XTX0eOOA" name="rectangle" specification="_f5gDEE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSHXZU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXZk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXZ007EeuDP5XTX0eOOA" name="halfWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXaE07EeuDP5XTX0eOOA" name="halfHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(halfWidth  >= 0)) throw new IllegalArgumentException(&quot;half width must be nonnegative&quot;);
		if (!(halfHeight >= 0)) throw new IllegalArgumentException(&quot;half height must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*halfWidth);
		double hs = factorY(2*halfHeight);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.draw(new Rectangle2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSHXaU07EeuDP5XTX0eOOA" name="filledRectangle" specification="_f5gDFU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSHXak07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXa007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXbE07EeuDP5XTX0eOOA" name="halfWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSHXbU07EeuDP5XTX0eOOA" name="halfHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (!(halfWidth  >= 0)) throw new IllegalArgumentException(&quot;half width must be nonnegative&quot;);
		if (!(halfHeight >= 0)) throw new IllegalArgumentException(&quot;half height must be nonnegative&quot;);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(2*halfWidth);
		double hs = factorY(2*halfHeight);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else offscreen.fill(new Rectangle2D.Double(xs - ws/2, ys - hs/2, ws, hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSH-cE07EeuDP5XTX0eOOA" name="polygon" specification="_f5gqIE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSH-cU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSH-ck07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSH-c007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSH-dE07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>if (x == null) throw new IllegalArgumentException(&quot;x-coordinate array is null&quot;);
		if (y == null) throw new IllegalArgumentException(&quot;y-coordinate array is null&quot;);
		int n1 = x.length;
		int n2 = y.length;
		if (n1 != n2) throw new IllegalArgumentException(&quot;arrays must be of the same length&quot;);
		int n = n1;
		if (n == 0) return;

		GeneralPath path = new GeneralPath();
		path.moveTo((float) scaleX(x[0]), (float) scaleY(y[0]));
		for (int i = 0; i &lt; n; i++)
			path.lineTo((float) scaleX(x[i]), (float) scaleY(y[i]));
		path.closePath();
		offscreen.draw(path);
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSH-dU07EeuDP5XTX0eOOA" name="filledPolygon" specification="_f50MIE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSH-dk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSH-d007EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSH-eE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSH-eU07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>if (x == null) throw new IllegalArgumentException(&quot;x-coordinate array is null&quot;);
		if (y == null) throw new IllegalArgumentException(&quot;y-coordinate array is null&quot;);
		int n1 = x.length;
		int n2 = y.length;
		if (n1 != n2) throw new IllegalArgumentException(&quot;arrays must be of the same length&quot;);
		int n = n1;
		if (n == 0) return;

		GeneralPath path = new GeneralPath();
		path.moveTo((float) scaleX(x[0]), (float) scaleY(y[0]));
		for (int i = 0; i &lt; n; i++)
			path.lineTo((float) scaleX(x[i]), (float) scaleY(y[i]));
		path.closePath();
		offscreen.fill(path);
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSH-ek07EeuDP5XTX0eOOA" name="getImage" specification="_f532gE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSH-e007EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSH-fE07EeuDP5XTX0eOOA" type="_gPMmQE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>if (filename == null) throw new IllegalArgumentException();

		// to read from file
		ImageIcon icon = new ImageIcon(filename);

		// try to read from URL
		if ((icon == null) || (icon.getImageLoadStatus() != MediaTracker.COMPLETE)) {
			try {
				URL url = new URL(filename);
				icon = new ImageIcon(url);
			}
			catch (MalformedURLException e) {
				/* not a url */
			}
		}

		// in case file is inside a .jar (classpath relative to StdDraw)
		if ((icon == null) || (icon.getImageLoadStatus() != MediaTracker.COMPLETE)) {
			URL url = StdDraw.class.getResource(filename);
			if (url != null)
				icon = new ImageIcon(url);
		}

		// in case file is inside a .jar (classpath relative to root of jar)
		if ((icon == null) || (icon.getImageLoadStatus() != MediaTracker.COMPLETE)) {
			URL url = StdDraw.class.getResource(&quot;/&quot; + filename);
			if (url == null) throw new IllegalArgumentException(&quot;image &quot; + filename + &quot; not found&quot;);
			icon = new ImageIcon(url);
		}

		return icon.getImage();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSH-fU07EeuDP5XTX0eOOA" name="picture" specification="_f56SwE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSH-fk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSH-f007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSH-gE07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>// BufferedImage image = getImage(filename);
		Image image = getImage(filename);
		double xs = scaleX(x);
		double ys = scaleY(y);
		// int ws = image.getWidth();    // can call only if image is a BufferedImage
		// int hs = image.getHeight();
		int ws = image.getWidth(null);
		int hs = image.getHeight(null);
		if (ws &lt; 0 || hs &lt; 0) throw new IllegalArgumentException(&quot;image &quot; + filename + &quot; is corrupt&quot;);

		offscreen.drawImage(image, (int) Math.round(xs - ws/2.0), (int) Math.round(ys - hs/2.0), null);
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSIlgE07EeuDP5XTX0eOOA" name="picture" specification="_f58H8E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSIlgU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlgk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlg007EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlhE07EeuDP5XTX0eOOA" name="degrees">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>// BufferedImage image = getImage(filename);
		Image image = getImage(filename);
		double xs = scaleX(x);
		double ys = scaleY(y);
		// int ws = image.getWidth();    // can call only if image is a BufferedImage
		// int hs = image.getHeight();
		int ws = image.getWidth(null);
		int hs = image.getHeight(null);
		if (ws &lt; 0 || hs &lt; 0) throw new IllegalArgumentException(&quot;image &quot; + filename + &quot; is corrupt&quot;);

		offscreen.rotate(Math.toRadians(-degrees), xs, ys);
		offscreen.drawImage(image, (int) Math.round(xs - ws/2.0), (int) Math.round(ys - hs/2.0), null);
		offscreen.rotate(Math.toRadians(+degrees), xs, ys);

		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSIlhU07EeuDP5XTX0eOOA" name="picture" specification="_f599IE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSIlhk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlh007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIliE07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIliU07EeuDP5XTX0eOOA" name="scaledWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlik07EeuDP5XTX0eOOA" name="scaledHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>Image image = getImage(filename);
		if (scaledWidth  &lt; 0) throw new IllegalArgumentException(&quot;width  is negative: &quot; + scaledWidth);
		if (scaledHeight &lt; 0) throw new IllegalArgumentException(&quot;height is negative: &quot; + scaledHeight);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(scaledWidth);
		double hs = factorY(scaledHeight);
		if (ws &lt; 0 || hs &lt; 0) throw new IllegalArgumentException(&quot;image &quot; + filename + &quot; is corrupt&quot;);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);
		else {
			offscreen.drawImage(image, (int) Math.round(xs - ws/2.0),
					(int) Math.round(ys - hs/2.0),
					(int) Math.round(ws),
					(int) Math.round(hs), null);
		}
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSIli007EeuDP5XTX0eOOA" name="picture" specification="_f599Jk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSIljE07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIljU07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIljk07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlj007EeuDP5XTX0eOOA" name="scaledWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlkE07EeuDP5XTX0eOOA" name="scaledHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSIlkU07EeuDP5XTX0eOOA" name="degrees">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (scaledWidth &lt; 0) throw new IllegalArgumentException(&quot;width is negative: &quot; + scaledWidth);
		if (scaledHeight &lt; 0) throw new IllegalArgumentException(&quot;height is negative: &quot; + scaledHeight);
		Image image = getImage(filename);
		double xs = scaleX(x);
		double ys = scaleY(y);
		double ws = factorX(scaledWidth);
		double hs = factorY(scaledHeight);
		if (ws &lt; 0 || hs &lt; 0) throw new IllegalArgumentException(&quot;image &quot; + filename + &quot; is corrupt&quot;);
		if (ws &lt;= 1 &amp;&amp; hs &lt;= 1) pixel(x, y);

		offscreen.rotate(Math.toRadians(-degrees), xs, ys);
		offscreen.drawImage(image, (int) Math.round(xs - ws/2.0),
				(int) Math.round(ys - hs/2.0),
				(int) Math.round(ws),
				(int) Math.round(hs), null);
		offscreen.rotate(Math.toRadians(+degrees), xs, ys);

		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJMkE07EeuDP5XTX0eOOA" name="text" specification="_f5-kME07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJMkU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMkk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMk007EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (text == null) throw new IllegalArgumentException();
		offscreen.setFont(font);
		FontMetrics metrics = offscreen.getFontMetrics();
		double xs = scaleX(x);
		double ys = scaleY(y);
		int ws = metrics.stringWidth(text);
		int hs = metrics.getDescent();
		offscreen.drawString(text, (float) (xs - ws/2.0), (float) (ys + hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJMlE07EeuDP5XTX0eOOA" name="text" specification="_f5-kNE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJMlU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMlk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMl007EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMmE07EeuDP5XTX0eOOA" name="degrees">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>if (text == null) throw new IllegalArgumentException();
		double xs = scaleX(x);
		double ys = scaleY(y);
		offscreen.rotate(Math.toRadians(-degrees), xs, ys);
		text(x, y, text);
		offscreen.rotate(Math.toRadians(+degrees), xs, ys);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJMmU07EeuDP5XTX0eOOA" name="textLeft" specification="_f5_LQU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJMmk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMm007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMnE07EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (text == null) throw new IllegalArgumentException();
		offscreen.setFont(font);
		FontMetrics metrics = offscreen.getFontMetrics();
		double xs = scaleX(x);
		double ys = scaleY(y);
		int hs = metrics.getDescent();
		offscreen.drawString(text, (float) xs, (float) (ys + hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJMnU07EeuDP5XTX0eOOA" name="textRight" specification="_f6COkE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJMnk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMn007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSJMoE07EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (text == null) throw new IllegalArgumentException();
		offscreen.setFont(font);
		FontMetrics metrics = offscreen.getFontMetrics();
		double xs = scaleX(x);
		double ys = scaleY(y);
		int ws = metrics.stringWidth(text);
		int hs = metrics.getDescent();
		offscreen.drawString(text, (float) (xs - ws), (float) (ys + hs));
		draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJMoU07EeuDP5XTX0eOOA" name="show" specification="_f6DcsE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJMok07EeuDP5XTX0eOOA" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>show();
		pause(t);
		enableDoubleBuffering();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzoE07EeuDP5XTX0eOOA" name="pause" specification="_f6F48E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJzoU07EeuDP5XTX0eOOA" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>try {
			Thread.sleep(t);
		}
		catch (InterruptedException e) {
			System.out.println(&quot;Error sleeping&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzok07EeuDP5XTX0eOOA" name="show" specification="_f6F48k07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>onscreen.drawImage(offscreenImage, 0, 0, null);
		frame.repaint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzo007EeuDP5XTX0eOOA" name="draw" specification="_f6F48007EeuDP5XTX0eOOA">
          <language>java</language>
          <body>if (!defer) show();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzpE07EeuDP5XTX0eOOA" name="enableDoubleBuffering" specification="_f6F49E07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>defer = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzpU07EeuDP5XTX0eOOA" name="disableDoubleBuffering" specification="_f6GgAE07EeuDP5XTX0eOOA">
          <language>java</language>
          <body>defer = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzpk07EeuDP5XTX0eOOA" name="save" specification="_f6GgAU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJzp007EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if (filename == null) throw new IllegalArgumentException();
		File file = new File(filename);
		String suffix = filename.substring(filename.lastIndexOf('.') + 1);

		// png files
		if (&quot;png&quot;.equalsIgnoreCase(suffix)) {
			try {
				ImageIO.write(onscreenImage, suffix, file);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
		}

		// need to change from ARGB to RGB for JPEG
		// reference: http://archives.java.sun.com/cgi-bin/wa?A2=ind0404&amp;L=java2d-interest&amp;D=0&amp;P=2727
		else if (&quot;jpg&quot;.equalsIgnoreCase(suffix)) {
			WritableRaster raster = onscreenImage.getRaster();
			WritableRaster newRaster;
			newRaster = raster.createWritableChild(0, 0, width, height, 0, 0, new int[] {0, 1, 2});
			DirectColorModel cm = (DirectColorModel) onscreenImage.getColorModel();
			DirectColorModel newCM = new DirectColorModel(cm.getPixelSize(),
					cm.getRedMask(),
					cm.getGreenMask(),
					cm.getBlueMask());
			BufferedImage rgbBuffer = new BufferedImage(newCM, newRaster, false,  null);
			try {
				ImageIO.write(rgbBuffer, suffix, file);
			}
			catch (IOException e) {
				e.printStackTrace();
			}
		}

		else {
			System.out.println(&quot;Invalid image file type: &quot; + suffix);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzqE07EeuDP5XTX0eOOA" name="actionPerformed" specification="_gQbVUE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJzqU07EeuDP5XTX0eOOA" name="e" type="_gPTT8E07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>String ev = e.getActionCommand();
		System.out.println(&quot;EC: &quot;+ ev);
		if(ev.equals(&quot;Save&quot;)) {
		FileDialog chooser = new FileDialog(StdDraw.frame, &quot;Use a .png or .jpg extension&quot;, FileDialog.SAVE);
		chooser.setVisible(true);
		String filename = chooser.getFile();
		if (filename != null) {
			StdDraw.save(chooser.getDirectory() + File.separator + chooser.getFile());
		}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzqk07EeuDP5XTX0eOOA" name="isMousePressed" specification="_f6HHEE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJzq007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>synchronized (mouseLock) {
			return isMousePressed;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzrE07EeuDP5XTX0eOOA" name="mousePressed" specification="_f6HHEk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJzrU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>synchronized (mouseLock) {
			return isMousePressed;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzrk07EeuDP5XTX0eOOA" name="mouseX" specification="_f6I8Qk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJzr007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>synchronized (mouseLock) {
			return mouseX;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSJzsE07EeuDP5XTX0eOOA" name="mouseY" specification="_f6JjUU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSJzsU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>synchronized (mouseLock) {
			return mouseY;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKasE07EeuDP5XTX0eOOA" name="mousePressed" specification="_gQcjc007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKasU07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>synchronized (mouseLock) {
			mouseX = StdDraw.userX(e.getX());
			mouseY = StdDraw.userY(e.getY());
			isMousePressed = true;
			System.out.println(&quot;Mouse: &quot;+mouseX+&quot;,&quot;+mouseY);
		}
		//StdDraw.ellipse(0.3, 0.5, 0.1, 0.2);
		//StdDraw.clear();
		StdDraw.draw();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKask07EeuDP5XTX0eOOA" name="mouseReleased" specification="_gQcjeE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKas007EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>synchronized (mouseLock) {
			isMousePressed = false;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKatE07EeuDP5XTX0eOOA" name="mouseDragged" specification="_gQdKg007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKatU07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>synchronized (mouseLock) {
			mouseX = StdDraw.userX(e.getX());
			mouseY = StdDraw.userY(e.getY());
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKatk07EeuDP5XTX0eOOA" name="mouseMoved" specification="_gQeYoU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKat007EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>synchronized (mouseLock) {
			mouseX = StdDraw.userX(e.getX());
			mouseY = StdDraw.userY(e.getY());
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKauE07EeuDP5XTX0eOOA" name="hasNextKeyTyped" specification="_f6KKYE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKauU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>synchronized (keyLock) {
			return !keysTyped.isEmpty();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKauk07EeuDP5XTX0eOOA" name="nextKeyTyped" specification="_f6KxcE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKau007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
          <language>java</language>
          <body>synchronized (keyLock) {
			if (keysTyped.isEmpty()) {
				throw new NoSuchElementException(&quot;your program has already processed all keystrokes&quot;);
			}
			return keysTyped.remove(keysTyped.size() - 1);
			// return keysTyped.removeLast();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKavE07EeuDP5XTX0eOOA" name="isKeyPressed" specification="_f6Kxck07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKavU07EeuDP5XTX0eOOA" name="keycode">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSKavk07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>synchronized (keyLock) {
			return keysDown.contains(keycode);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSKav007EeuDP5XTX0eOOA" name="keyTyped" specification="_gQeYpk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSKawE07EeuDP5XTX0eOOA" name="e" type="_gPW-UU07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>synchronized (keyLock) {
			keysTyped.addFirst(e.getKeyChar());
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSLBwE07EeuDP5XTX0eOOA" name="keyPressed" specification="_gQe_s007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSLBwU07EeuDP5XTX0eOOA" name="e" type="_gPW-UU07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>synchronized (keyLock) {
			keysDown.add(e.getKeyCode());
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSLBwk07EeuDP5XTX0eOOA" name="keyReleased" specification="_gQfmwk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSLBw007EeuDP5XTX0eOOA" name="e" type="_gPW-UU07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>synchronized (keyLock) {
			keysDown.remove(e.getKeyCode());
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSLBxE07EeuDP5XTX0eOOA" name="main" specification="_f6L_kE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSLBxU07EeuDP5XTX0eOOA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSLBxk07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>StdDraw.square(0.2, 0.8, 0.1);
		StdDraw.filledSquare(0.8, 0.8, 0.2);
		StdDraw.circle(0.8, 0.2, 0.2);

		StdDraw.setPenColor(StdDraw.BOOK_RED);
		StdDraw.setPenRadius(0.02);
		StdDraw.arc(0.8, 0.2, 0.1, 200, 45);

		// draw a blue diamond
		StdDraw.setPenRadius();
		StdDraw.setPenColor(StdDraw.BOOK_BLUE);
		double[] x = { 0.1, 0.2, 0.3, 0.2 };
		double[] y = { 0.2, 0.3, 0.2, 0.1 };
		StdDraw.filledPolygon(x, y);

		// text
		StdDraw.setPenColor(StdDraw.BLACK);
		StdDraw.text(0.2, 0.5, &quot;black text&quot;);
		StdDraw.setPenColor(StdDraw.WHITE);
		StdDraw.text(0.8, 0.8, &quot;white text&quot;);
		
		StdDraw.setPenColor(StdDraw.BOOK_BLUE);
		StdDraw.rectangle(0.5, 0.7, 0.2, 0.1);
		double[] xx = {0.2,0.4,0.5};
		double[] yy = {0.8,0.4,0.5};
		StdDraw.filledPolygon(xx, yy);
		StdDraw.ellipse(0.7, 0.5, 0.2, 0.1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_f5JdwE07EeuDP5XTX0eOOA" name="StdDraw" visibility="private">
          <eAnnotations xmi:id="_f5LS8E07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_f5LS8U07EeuDP5XTX0eOOA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_f5OWQE07EeuDP5XTX0eOOA" type="_f42i0E07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f5QLcE07EeuDP5XTX0eOOA" name="_initializer1" isStatic="true" method="_gSDF8k07EeuDP5XTX0eOOA">
          <eAnnotations xmi:id="_f5QLcU07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_f5QLck07EeuDP5XTX0eOOA" key="init"/>
          </eAnnotations>
        </ownedOperation>
        <ownedOperation xmi:id="_f5QygU07EeuDP5XTX0eOOA" name="setCanvasSize" isStatic="true" method="_gSDtAE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSjcRU07EeuDP5XTX0eOOA">
            <body>Sets the canvas (drawing area) to be 512-by-512 pixels.
	 * This also erases the current drawing and resets the coordinate system,
	 * pen radius, pen color, and font back to their default values.
	 * Ordinarly, this method is called once, at the very beginning
	 * of a program.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f5RZkE07EeuDP5XTX0eOOA" name="setCanvasSize" isStatic="true" method="_gSDtAU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSjcRk07EeuDP5XTX0eOOA">
            <body>Sets the canvas (drawing area) to be &lt;em>width&lt;/em>-by-&lt;em>height&lt;/em> pixels.
	 * This also erases the current drawing and resets the coordinate system,
	 * pen radius, pen color, and font back to their default values.
	 * Ordinarly, this method is called once, at the very beginning
	 * of a program.
	 *
	 * @param  canvasWidth the width as a number of pixels
	 * @param  canvasHeight the height as a number of pixels
	 * @throws IllegalArgumentException unless both {@code canvasWidth} and
	 *         {@code canvasHeight} are positive</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5RZkU07EeuDP5XTX0eOOA" name="canvasWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5RZkk07EeuDP5XTX0eOOA" name="canvasHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5RZk007EeuDP5XTX0eOOA" name="init" visibility="private" isStatic="true" method="_gSDtBE07EeuDP5XTX0eOOA"/>
        <ownedOperation xmi:id="_f5SAoE07EeuDP5XTX0eOOA" name="createMenuBar" visibility="private" isStatic="true" method="_gSDtBU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQZgIE07EeuDP5XTX0eOOA" type="_gPgvVE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f5TOwE07EeuDP5XTX0eOOA" name="setXscale" isStatic="true" method="_gSDtB007EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSjcR007EeuDP5XTX0eOOA">
            <body>Sets the &lt;em>x&lt;/em>-scale to be the default (between 0.0 and 1.0).</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f5T10E07EeuDP5XTX0eOOA" name="setYscale" isStatic="true" method="_gSDtCE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSjcSE07EeuDP5XTX0eOOA">
            <body>Sets the &lt;em>y&lt;/em>-scale to be the default (between 0.0 and 1.0).</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f5T10U07EeuDP5XTX0eOOA" name="setScale" isStatic="true" method="_gSDtCU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSjcSU07EeuDP5XTX0eOOA">
            <body>Sets the &lt;em>x&lt;/em>-scale and &lt;em>y&lt;/em>-scale to be the default
	 * (between 0.0 and 1.0).</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f5T10k07EeuDP5XTX0eOOA" name="setXscale" isStatic="true" method="_gSDtCk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDUE07EeuDP5XTX0eOOA">
            <body>Sets the &lt;em>x&lt;/em>-scale to the specified range.
	 *
	 * @param  min the minimum value of the &lt;em>x&lt;/em>-scale
	 * @param  max the maximum value of the &lt;em>x&lt;/em>-scale
	 * @throws IllegalArgumentException if {@code (max == min)}</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5T10007EeuDP5XTX0eOOA" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5T11E07EeuDP5XTX0eOOA" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5Uc4E07EeuDP5XTX0eOOA" name="setYscale" isStatic="true" method="_gSDtDU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDUU07EeuDP5XTX0eOOA">
            <body>Sets the &lt;em>y&lt;/em>-scale to the specified range.
	 *
	 * @param  min the minimum value of the &lt;em>y&lt;/em>-scale
	 * @param  max the maximum value of the &lt;em>y&lt;/em>-scale
	 * @throws IllegalArgumentException if {@code (max == min)}</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5Uc4U07EeuDP5XTX0eOOA" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5Uc4k07EeuDP5XTX0eOOA" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5Uc4007EeuDP5XTX0eOOA" name="setScale" isStatic="true" method="_gSDtEE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDUk07EeuDP5XTX0eOOA">
            <body>Sets both the &lt;em>x&lt;/em>-scale and &lt;em>y&lt;/em>-scale to the (same) specified range.
	 *
	 * @param  min the minimum value of the &lt;em>x&lt;/em>- and &lt;em>y&lt;/em>-scales
	 * @param  max the maximum value of the &lt;em>x&lt;/em>- and &lt;em>y&lt;/em>-scales
	 * @throws IllegalArgumentException if {@code (max == min)}</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5Uc5E07EeuDP5XTX0eOOA" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5VD8E07EeuDP5XTX0eOOA" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5VD8U07EeuDP5XTX0eOOA" name="scaleX" visibility="private" isStatic="true" method="_gSEUEE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f5VD8k07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5VrAE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5VrAU07EeuDP5XTX0eOOA" name="scaleY" visibility="private" isStatic="true" method="_gSEUE007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f5VrAk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5WSEE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5WSEU07EeuDP5XTX0eOOA" name="factorX" visibility="private" isStatic="true" method="_gSEUFk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f5WSEk07EeuDP5XTX0eOOA" name="w">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5W5IE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5W5IU07EeuDP5XTX0eOOA" name="factorY" visibility="private" isStatic="true" method="_gSEUGU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f5W5Ik07EeuDP5XTX0eOOA" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5W5I007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5W5JE07EeuDP5XTX0eOOA" name="userX" visibility="private" isStatic="true" method="_gSEUHE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f5W5JU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5W5Jk07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5XgME07EeuDP5XTX0eOOA" name="userY" visibility="private" isStatic="true" method="_gSEUH007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f5XgMU07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5XgMk07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5XgM007EeuDP5XTX0eOOA" name="clear" isStatic="true" method="_gSEUIk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDU007EeuDP5XTX0eOOA">
            <body>Clears the screen to the default color (white).</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f5XgNE07EeuDP5XTX0eOOA" name="setPenRadius" isStatic="true" method="_gSEUJU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDVU07EeuDP5XTX0eOOA">
            <body>Sets the radius of the pen to the specified size.
	 * The pen is circular, so that lines have rounded ends, and when you set the
	 * pen radius and draw a point, you get a circle of the specified radius.
	 * The pen radius is not affected by coordinate scaling.
	 *
	 * @param  radius the radius of the pen
	 * @throws IllegalArgumentException if {@code radius} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5XgNU07EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5YHQE07EeuDP5XTX0eOOA" name="setPenColor" isStatic="true" method="_gSEUJ007EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDVk07EeuDP5XTX0eOOA">
            <body>Set the pen color to the default color (black).</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f5YuUE07EeuDP5XTX0eOOA" name="getFont" isStatic="true" method="_gSFiME07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDWE07EeuDP5XTX0eOOA">
            <body>Returns the current font.
	 *
	 * @return the current font</body>
          </ownedComment>
          <ownedParameter xmi:id="_gQaHMk07EeuDP5XTX0eOOA" type="_gPIU0E07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f5YuUU07EeuDP5XTX0eOOA" name="setFont" isStatic="true" method="_gSFiMk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDWU07EeuDP5XTX0eOOA">
            <body>Sets the font to the default font (sans serif, 16 point).</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f5ZVYE07EeuDP5XTX0eOOA" name="line" isStatic="true" method="_gSFiNU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDW007EeuDP5XTX0eOOA">
            <body>Draws a line segment between (&lt;em>x&lt;/em>&lt;sub>0&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>0&lt;/sub>) and
	 * (&lt;em>x&lt;/em>&lt;sub>1&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>1&lt;/sub>).
	 *
	 * @param  x0 the &lt;em>x&lt;/em>-coordinate of one endpoint
	 * @param  y0 the &lt;em>y&lt;/em>-coordinate of one endpoint
	 * @param  x1 the &lt;em>x&lt;/em>-coordinate of the other endpoint
	 * @param  y1 the &lt;em>y&lt;/em>-coordinate of the other endpoint</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5ZVYU07EeuDP5XTX0eOOA" name="x0">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5Z8cE07EeuDP5XTX0eOOA" name="y0">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5ajgE07EeuDP5XTX0eOOA" name="x1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5ajgU07EeuDP5XTX0eOOA" name="y1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5bKkE07EeuDP5XTX0eOOA" name="pixel" visibility="private" isStatic="true" method="_gSFiOk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDXE07EeuDP5XTX0eOOA">
            <body>Draws one pixel at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 * This method is private because pixels depend on the display.
	 * To achieve the same effect, set the pen radius to 0 and call {@code point()}.
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the pixel
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the pixel</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5bKkU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5bKkk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5bKk007EeuDP5XTX0eOOA" name="point" isStatic="true" method="_gSFiPU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDXU07EeuDP5XTX0eOOA">
            <body>Draws a point centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 * The point is a filled circle whose radius is equal to the pen radius.
	 * To draw a single-pixel point, first set the pen radius to 0.
	 *
	 * @param x the &lt;em>x&lt;/em>-coordinate of the point
	 * @param y the &lt;em>y&lt;/em>-coordinate of the point</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5bKlE07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5bKlU07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5bxoE07EeuDP5XTX0eOOA" name="circle" isStatic="true" method="_gSGJQE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDXk07EeuDP5XTX0eOOA">
            <body>Draws a circle of the specified radius, centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the circle
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the circle
	 * @param  radius the radius of the circle
	 * @throws IllegalArgumentException if {@code radius} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5bxoU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5bxok07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5bxo007EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5bxpE07EeuDP5XTX0eOOA" name="filledCircle" isStatic="true" method="_gSGJRE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDX007EeuDP5XTX0eOOA">
            <body>Draws a filled circle of the specified radius, centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the circle
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the circle
	 * @param  radius the radius of the circle
	 * @throws IllegalArgumentException if {@code radius} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5bxpU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5bxpk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5c_wE07EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5c_wU07EeuDP5XTX0eOOA" name="ellipse" isStatic="true" method="_gSGJSE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDYE07EeuDP5XTX0eOOA">
            <body>Draws an ellipse with the specified semimajor and semiminor axes,
	 * centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the ellipse
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the ellipse
	 * @param  semiMajorAxis is the semimajor axis of the ellipse
	 * @param  semiMinorAxis is the semiminor axis of the ellipse
	 * @throws IllegalArgumentException if either {@code semiMajorAxis}
	 *         or {@code semiMinorAxis} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5dm0E07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5dm0U07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5dm0k07EeuDP5XTX0eOOA" name="semiMajorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5dm0007EeuDP5XTX0eOOA" name="semiMinorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5dm1E07EeuDP5XTX0eOOA" name="filledEllipse" isStatic="true" method="_gSGJTU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDYU07EeuDP5XTX0eOOA">
            <body>Draws an ellipse with the specified semimajor and semiminor axes,
	 * centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the ellipse
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the ellipse
	 * @param  semiMajorAxis is the semimajor axis of the ellipse
	 * @param  semiMinorAxis is the semiminor axis of the ellipse
	 * @throws IllegalArgumentException if either {@code semiMajorAxis}
	 *         or {@code semiMinorAxis} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5dm1U07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5dm1k07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5dm1007EeuDP5XTX0eOOA" name="semiMajorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5eN4E07EeuDP5XTX0eOOA" name="semiMinorAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5eN4U07EeuDP5XTX0eOOA" name="arc" isStatic="true" method="_gSGJUk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDYk07EeuDP5XTX0eOOA">
            <body>Draws a circular arc of the specified radius,
	 * centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>), from angle1 to angle2 (in degrees).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the circle
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the circle
	 * @param  radius the radius of the circle
	 * @param  angle1 the starting angle. 0 would mean an arc beginning at 3 o'clock.
	 * @param  angle2 the angle at the end of the arc. For example, if
	 *         you want a 90 degree arc, then angle2 should be angle1 + 90.
	 * @throws IllegalArgumentException if {@code radius} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5eN4k07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5e08E07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5e08U07EeuDP5XTX0eOOA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5e08k07EeuDP5XTX0eOOA" name="angle1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5e08007EeuDP5XTX0eOOA" name="angle2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5e09E07EeuDP5XTX0eOOA" name="square" isStatic="true" method="_gSGJWE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDY007EeuDP5XTX0eOOA">
            <body>Draws a square of side length 2r, centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the square
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the square
	 * @param  halfLength one half the length of any side of the square
	 * @throws IllegalArgumentException if {@code halfLength} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5e09U07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5e09k07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5e09007EeuDP5XTX0eOOA" name="halfLength">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5fcAE07EeuDP5XTX0eOOA" name="filledSquare" isStatic="true" method="_gSHXYE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDZE07EeuDP5XTX0eOOA">
            <body>Draws a filled square of the specified size, centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the square
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the square
	 * @param  halfLength one half the length of any side of the square
	 * @throws IllegalArgumentException if {@code halfLength} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5fcAU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5fcAk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5fcA007EeuDP5XTX0eOOA" name="halfLength">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5gDEE07EeuDP5XTX0eOOA" name="rectangle" isStatic="true" method="_gSHXZE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDZU07EeuDP5XTX0eOOA">
            <body>Draws a rectangle of the specified size, centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the rectangle
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the rectangle
	 * @param  halfWidth one half the width of the rectangle
	 * @param  halfHeight one half the height of the rectangle
	 * @throws IllegalArgumentException if either {@code halfWidth} or {@code halfHeight} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5gDEU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5gDEk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5gDE007EeuDP5XTX0eOOA" name="halfWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5gDFE07EeuDP5XTX0eOOA" name="halfHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5gDFU07EeuDP5XTX0eOOA" name="filledRectangle" isStatic="true" method="_gSHXaU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDZk07EeuDP5XTX0eOOA">
            <body>Draws a filled rectangle of the specified size, centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the center of the rectangle
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the center of the rectangle
	 * @param  halfWidth one half the width of the rectangle
	 * @param  halfHeight one half the height of the rectangle
	 * @throws IllegalArgumentException if either {@code halfWidth} or {@code halfHeight} is negative</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5gDFk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5gDF007EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5gDGE07EeuDP5XTX0eOOA" name="halfWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5gDGU07EeuDP5XTX0eOOA" name="halfHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5gqIE07EeuDP5XTX0eOOA" name="polygon" isStatic="true" method="_gSH-cE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDZ007EeuDP5XTX0eOOA">
            <body>Draws a polygon with the vertices 
	 * (&lt;em>x&lt;/em>&lt;sub>0&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>0&lt;/sub>),
	 * (&lt;em>x&lt;/em>&lt;sub>1&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>1&lt;/sub>), ...,
	 * (&lt;em>x&lt;/em>&lt;sub>&lt;em>n&lt;/em>–1&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>&lt;em>n&lt;/em>–1&lt;/sub>).
	 *
	 * @param  x an array of all the &lt;em>x&lt;/em>-coordinates of the polygon
	 * @param  y an array of all the &lt;em>y&lt;/em>-coordinates of the polygon
	 * @throws IllegalArgumentException unless {@code x[]} and {@code y[]}
	 *         are of the same length</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5gqIU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f5hRMU07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5hRME07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f5ifUE07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f50MIE07EeuDP5XTX0eOOA" name="filledPolygon" isStatic="true" method="_gSH-dU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDaE07EeuDP5XTX0eOOA">
            <body>Draws a polygon with the vertices 
	 * (&lt;em>x&lt;/em>&lt;sub>0&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>0&lt;/sub>),
	 * (&lt;em>x&lt;/em>&lt;sub>1&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>1&lt;/sub>), ...,
	 * (&lt;em>x&lt;/em>&lt;sub>&lt;em>n&lt;/em>–1&lt;/sub>, &lt;em>y&lt;/em>&lt;sub>&lt;em>n&lt;/em>–1&lt;/sub>).
	 *
	 * @param  x an array of all the &lt;em>x&lt;/em>-coordinates of the polygon
	 * @param  y an array of all the &lt;em>y&lt;/em>-coordinates of the polygon
	 * @throws IllegalArgumentException unless {@code x[]} and {@code y[]}
	 *         are of the same length</body>
          </ownedComment>
          <ownedParameter xmi:id="_f50MIU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f51aQE07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f50zME07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f52BUE07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f532gE07EeuDP5XTX0eOOA" name="getImage" visibility="private" isStatic="true" method="_gSH-ek07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDaU07EeuDP5XTX0eOOA">
            <body>*************************************************************************
	 *  Drawing images.
	 **************************************************************************</body>
          </ownedComment>
          <ownedParameter xmi:id="_f54dkE07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gQauQE07EeuDP5XTX0eOOA" type="_gPMmQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f56SwE07EeuDP5XTX0eOOA" name="picture" isStatic="true" method="_gSH-fU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDak07EeuDP5XTX0eOOA">
            <body>Draws the specified image centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 * The supported image formats are JPEG, PNG, and GIF.
	 * As an optimization, the picture is cached, so there is no performance
	 * penalty for redrawing the same image multiple times (e.g., in an animation).
	 * However, if you change the picture file after drawing it, subsequent
	 * calls will draw the original picture.
	 *
	 * @param  x the center &lt;em>x&lt;/em>-coordinate of the image
	 * @param  y the center &lt;em>y&lt;/em>-coordinate of the image
	 * @param  filename the name of the image/picture, e.g., &quot;ball.gif&quot;
	 * @throws IllegalArgumentException if the image filename is invalid</body>
          </ownedComment>
          <ownedParameter xmi:id="_f56SwU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5650E07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5650U07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f58H8E07EeuDP5XTX0eOOA" name="picture" isStatic="true" method="_gSIlgE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqYE07EeuDP5XTX0eOOA">
            <body>Draws the specified image centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>),
	 * rotated given number of degrees.
	 * The supported image formats are JPEG, PNG, and GIF.
	 *
	 * @param  x the center &lt;em>x&lt;/em>-coordinate of the image
	 * @param  y the center &lt;em>y&lt;/em>-coordinate of the image
	 * @param  filename the name of the image/picture, e.g., &quot;ball.gif&quot;
	 * @param  degrees is the number of degrees to rotate counterclockwise
	 * @throws IllegalArgumentException if the image filename is invalid</body>
          </ownedComment>
          <ownedParameter xmi:id="_f58vAE07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f58vAU07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f58vAk07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f59WEE07EeuDP5XTX0eOOA" name="degrees">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f599IE07EeuDP5XTX0eOOA" name="picture" isStatic="true" method="_gSIlhU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqYU07EeuDP5XTX0eOOA">
            <body>Draws the specified image centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>),
	 * rescaled to the specified bounding box.
	 * The supported image formats are JPEG, PNG, and GIF.
	 *
	 * @param  x the center &lt;em>x&lt;/em>-coordinate of the image
	 * @param  y the center &lt;em>y&lt;/em>-coordinate of the image
	 * @param  filename the name of the image/picture, e.g., &quot;ball.gif&quot;
	 * @param  scaledWidth the width of the scaled image (in screen coordinates)
	 * @param  scaledHeight the height of the scaled image (in screen coordinates)
	 * @throws IllegalArgumentException if either {@code scaledWidth}
	 *         or {@code scaledHeight} is negative
	 * @throws IllegalArgumentException if the image filename is invalid</body>
          </ownedComment>
          <ownedParameter xmi:id="_f599IU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599Ik07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599I007EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599JE07EeuDP5XTX0eOOA" name="scaledWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599JU07EeuDP5XTX0eOOA" name="scaledHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f599Jk07EeuDP5XTX0eOOA" name="picture" isStatic="true" method="_gSIli007EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqYk07EeuDP5XTX0eOOA">
            <body>Draws the specified image centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>), rotated
	 * given number of degrees, and rescaled to the specified bounding box.
	 * The supported image formats are JPEG, PNG, and GIF.
	 *
	 * @param  x the center &lt;em>x&lt;/em>-coordinate of the image
	 * @param  y the center &lt;em>y&lt;/em>-coordinate of the image
	 * @param  filename the name of the image/picture, e.g., &quot;ball.gif&quot;
	 * @param  scaledWidth the width of the scaled image (in screen coordinates)
	 * @param  scaledHeight the height of the scaled image (in screen coordinates)
	 * @param  degrees is the number of degrees to rotate counterclockwise
	 * @throws IllegalArgumentException if either {@code scaledWidth}
	 *         or {@code scaledHeight} is negative
	 * @throws IllegalArgumentException if the image filename is invalid</body>
          </ownedComment>
          <ownedParameter xmi:id="_f599J007EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599KE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599KU07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599Kk07EeuDP5XTX0eOOA" name="scaledWidth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599K007EeuDP5XTX0eOOA" name="scaledHeight">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f599LE07EeuDP5XTX0eOOA" name="degrees">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5-kME07EeuDP5XTX0eOOA" name="text" isStatic="true" method="_gSJMkE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqY007EeuDP5XTX0eOOA">
            <body>*************************************************************************
	 *  Drawing text.
	 **************************************************************************</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5-kMU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5-kMk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5-kM007EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5-kNE07EeuDP5XTX0eOOA" name="text" isStatic="true" method="_gSJMlE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqZE07EeuDP5XTX0eOOA">
            <body>Write the given text string in the current font, centered at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>) and
	 * rotated by the specified number of degrees.
	 * @param  x the center &lt;em>x&lt;/em>-coordinate of the text
	 * @param  y the center &lt;em>y&lt;/em>-coordinate of the text
	 * @param  text the text to write
	 * @param  degrees is the number of degrees to rotate counterclockwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5-kNU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5-kNk07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5-kN007EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f5_LQE07EeuDP5XTX0eOOA" name="degrees">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f5_LQU07EeuDP5XTX0eOOA" name="textLeft" isStatic="true" method="_gSJMmU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqZU07EeuDP5XTX0eOOA">
            <body>Write the given text string in the current font, left-aligned at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the text
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the text
	 * @param  text the text</body>
          </ownedComment>
          <ownedParameter xmi:id="_f5_LQk07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f6BngE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f6BngU07EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6COkE07EeuDP5XTX0eOOA" name="textRight" isStatic="true" method="_gSJMnU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqZk07EeuDP5XTX0eOOA">
            <body>Write the given text string in the current font, right-aligned at (&lt;em>x&lt;/em>, &lt;em>y&lt;/em>).
	 *
	 * @param  x the &lt;em>x&lt;/em>-coordinate of the text
	 * @param  y the &lt;em>y&lt;/em>-coordinate of the text
	 * @param  text the text to write</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6COkU07EeuDP5XTX0eOOA" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f6C1oE07EeuDP5XTX0eOOA" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f6C1oU07EeuDP5XTX0eOOA" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6DcsE07EeuDP5XTX0eOOA" name="show" isStatic="true" method="_gSJMoU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f6DcsU07EeuDP5XTX0eOOA" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6F48E07EeuDP5XTX0eOOA" name="pause" isStatic="true" method="_gSJzoE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqZ007EeuDP5XTX0eOOA">
            <body>Pause for t milliseconds. This method is intended to support computer animations.
	 * @param t number of milliseconds</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6F48U07EeuDP5XTX0eOOA" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6F48k07EeuDP5XTX0eOOA" name="show" isStatic="true" method="_gSJzok07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqaE07EeuDP5XTX0eOOA">
            <body>Copies offscreen buffer to onscreen buffer. There is no reason to call
	 * this method unless double buffering is enabled.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f6F48007EeuDP5XTX0eOOA" name="draw" visibility="private" isStatic="true" method="_gSJzo007EeuDP5XTX0eOOA"/>
        <ownedOperation xmi:id="_f6F49E07EeuDP5XTX0eOOA" name="enableDoubleBuffering" isStatic="true" method="_gSJzpE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqaU07EeuDP5XTX0eOOA">
            <body>Enable double buffering. All subsequent calls to 
	 * drawing methods such as {@code line()}, {@code circle()},
	 * and {@code square()} will be deffered until the next call
	 * to show(). Useful for animations.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f6GgAE07EeuDP5XTX0eOOA" name="disableDoubleBuffering" isStatic="true" method="_gSJzpU07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqak07EeuDP5XTX0eOOA">
            <body>Disable double buffering. All subsequent calls to 
	 * drawing methods such as {@code line()}, {@code circle()},
	 * and {@code square()} will be displayed on screen when called.
	 * This is the default.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_f6GgAU07EeuDP5XTX0eOOA" name="save" isStatic="true" method="_gSJzpk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqa007EeuDP5XTX0eOOA">
            <body>*************************************************************************
	 *  Save drawing to a file.
	 **************************************************************************</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6GgAk07EeuDP5XTX0eOOA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6HHEE07EeuDP5XTX0eOOA" name="isMousePressed" isStatic="true" method="_gSJzqk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqbE07EeuDP5XTX0eOOA">
            <body>*************************************************************************
	 *  Mouse interactions.
	 **************************************************************************</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6HHEU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6HHEk07EeuDP5XTX0eOOA" name="mousePressed" isStatic="true" method="_gSJzrE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f6HuIE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6I8Qk07EeuDP5XTX0eOOA" name="mouseX" isStatic="true" method="_gSJzrk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqbU07EeuDP5XTX0eOOA">
            <body>Returns the &lt;em>x&lt;/em>-coordinate of the mouse.
	 *
	 * @return the &lt;em>x&lt;/em>-coordinate of the mouse</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6JjUE07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6JjUU07EeuDP5XTX0eOOA" name="mouseY" isStatic="true" method="_gSJzsE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkqbk07EeuDP5XTX0eOOA">
            <body>Returns the &lt;em>y&lt;/em>-coordinate of the mouse.
	 *
	 * @return &lt;em>y&lt;/em>-coordinate of the mouse</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6JjUk07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6KKYE07EeuDP5XTX0eOOA" name="hasNextKeyTyped" isStatic="true" method="_gSKauE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSlRcE07EeuDP5XTX0eOOA">
            <body>Returns true if the user has typed a key (that has not yet been processed).
	 *
	 * @return {@code true} if the user has typed a key (that has not yet been processed
	 *         by {@link #nextKeyTyped()}; {@code false} otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6KKYU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6KxcE07EeuDP5XTX0eOOA" name="nextKeyTyped" isStatic="true" method="_gSKauk07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSlRcU07EeuDP5XTX0eOOA">
            <body>Returns the next key that was typed by the user (that your program has not already processed).
	 * This method should be preceded by a call to {@link #hasNextKeyTyped()} to ensure
	 * that there is a next key to process.
	 * This method returns a Unicode character corresponding to the key
	 * typed (such as {@code 'a'} or {@code 'A'}).
	 * It cannot identify action keys (such as F1 and arrow keys)
	 * or modifier keys (such as control).
	 *
	 * @return the next key typed by the user (that your program has not already processed).
	 * @throws NoSuchElementException if there is no remaining key</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6KxcU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6Kxck07EeuDP5XTX0eOOA" name="isKeyPressed" isStatic="true" method="_gSKavE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSlRck07EeuDP5XTX0eOOA">
            <body>Returns true if the given key is being pressed.
	 * &lt;p>
	 * This method takes the keycode (corresponding to a physical key)
	 *  as an argument. It can handle action keys
	 * (such as F1 and arrow keys) and modifier keys (such as shift and control).
	 * See {@link KeyEvent} for a description of key codes.
	 *
	 * @param  keycode the key to check if it is being pressed
	 * @return {@code true} if {@code keycode} is currently being pressed;
	 *         {@code false} otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6LYgE07EeuDP5XTX0eOOA" name="keycode">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f6LYgU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f6L_kE07EeuDP5XTX0eOOA" name="main" isStatic="true" method="_gSLBxE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSlRc007EeuDP5XTX0eOOA">
            <body>Test client.
	 *
	 * @param args the command-line arguments</body>
          </ownedComment>
          <ownedParameter xmi:id="_f6L_kU07EeuDP5XTX0eOOA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f6L_kk07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gQZgIU07EeuDP5XTX0eOOA" name="clear" isStatic="true" method="_gSEUI007EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDVE07EeuDP5XTX0eOOA">
            <body>Clears the screen to the specified color.
	 *
	 * @param color the color to make the background</body>
          </ownedComment>
          <ownedParameter xmi:id="_gQZgIk07EeuDP5XTX0eOOA" name="color" type="_gM_m0E07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQaHME07EeuDP5XTX0eOOA" name="setPenColor" isStatic="true" method="_gSE7IE07EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDV007EeuDP5XTX0eOOA">
            <body>Sets the pen color to the specified color.
	 * &lt;p>
	 * The predefined pen colors are
	 * {@code StdDraw.BLACK}, {@code StdDraw.BLUE}, {@code StdDraw.CYAN},
	 * {@code StdDraw.DARK_GRAY}, {@code StdDraw.GRAY}, {@code StdDraw.GREEN},
	 * {@code StdDraw.LIGHT_GRAY}, {@code StdDraw.MAGENTA}, {@code StdDraw.ORANGE},
	 * {@code StdDraw.PINK}, {@code StdDraw.RED}, {@code StdDraw.WHITE}, and
	 * {@code StdDraw.YELLOW}.
	 *
	 * @param color the color to make the pen</body>
          </ownedComment>
          <ownedParameter xmi:id="_gQaHMU07EeuDP5XTX0eOOA" name="color" type="_gM_m0E07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQaHM007EeuDP5XTX0eOOA" name="setFont" isStatic="true" method="_gSFiM007EeuDP5XTX0eOOA">
          <ownedComment xmi:id="_gSkDWk07EeuDP5XTX0eOOA">
            <body>Sets the font to the specified value.
	 *
	 * @param font the font</body>
          </ownedComment>
          <ownedParameter xmi:id="_gQaHNE07EeuDP5XTX0eOOA" name="font" type="_gPIU0E07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQbVUE07EeuDP5XTX0eOOA" name="actionPerformed" method="_gSJzqE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQbVUU07EeuDP5XTX0eOOA" name="e" type="_gPTT8E07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQbVVU07EeuDP5XTX0eOOA" name="mouseClicked">
          <ownedParameter xmi:id="_gQbVVk07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQb8Y007EeuDP5XTX0eOOA" name="mouseEntered">
          <ownedParameter xmi:id="_gQb8ZE07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQb8aE07EeuDP5XTX0eOOA" name="mouseExited">
          <ownedParameter xmi:id="_gQb8aU07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQcjc007EeuDP5XTX0eOOA" name="mousePressed" method="_gSKasE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQcjdE07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQcjeE07EeuDP5XTX0eOOA" name="mouseReleased" method="_gSKask07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQcjeU07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQdKg007EeuDP5XTX0eOOA" name="mouseDragged" method="_gSKatE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQdKhE07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQeYoU07EeuDP5XTX0eOOA" name="mouseMoved" method="_gSKatk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQeYok07EeuDP5XTX0eOOA" name="e" type="_gPVJIE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQeYpk07EeuDP5XTX0eOOA" name="keyTyped" method="_gSKav007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQeYp007EeuDP5XTX0eOOA" name="e" type="_gPW-UU07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQe_s007EeuDP5XTX0eOOA" name="keyPressed" method="_gSLBwE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQe_tE07EeuDP5XTX0eOOA" name="e" type="_gPW-UU07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQfmwk07EeuDP5XTX0eOOA" name="keyReleased" method="_gSLBwk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQfmw007EeuDP5XTX0eOOA" name="e" type="_gPW-UU07EeuDP5XTX0eOOA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_f7HMoE07EeuDP5XTX0eOOA" name="GUIShape">
        <ownedAttribute xmi:id="_gRaMwk07EeuDP5XTX0eOOA" name="_g" visibility="private" type="_f4hysE07EeuDP5XTX0eOOA" association="_gTR1AU07EeuDP5XTX0eOOA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gRaz0E07EeuDP5XTX0eOOA" value="null"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRaz0k07EeuDP5XTX0eOOA" name="_fill" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_gRaz1E07EeuDP5XTX0eOOA" name="_color" visibility="private" type="_gM_m0E07EeuDP5XTX0eOOA" association="_gTR1BE07EeuDP5XTX0eOOA"/>
        <ownedAttribute xmi:id="_gRaz1k07EeuDP5XTX0eOOA" name="_tag" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_gQEwAE07EeuDP5XTX0eOOA" client="_f7HMoE07EeuDP5XTX0eOOA" supplier="_f2yGQE07EeuDP5XTX0eOOA" contract="_f2yGQE07EeuDP5XTX0eOOA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSSWgk07EeuDP5XTX0eOOA" name="GUIShape" specification="_gQxTkE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSSWg007EeuDP5XTX0eOOA" name="g" type="_f4hysE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gSSWhE07EeuDP5XTX0eOOA" name="f">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSSWhU07EeuDP5XTX0eOOA" name="c" type="_gM_m0E07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gSSWhk07EeuDP5XTX0eOOA" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSSWh007EeuDP5XTX0eOOA" type="_f7HMoE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>_g = null;
		if (g!=null) {_g = g.copy();}
		_fill= f;
		_color = c;
		_tag = t;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSS9kE07EeuDP5XTX0eOOA" name="GUIShape" specification="_gQFXEE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSS9kU07EeuDP5XTX0eOOA" name="ot" type="_f7HMoE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gSS9kk07EeuDP5XTX0eOOA" type="_f7HMoE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>this(ot._g, ot._fill, ot._color, ot._tag);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSS9k007EeuDP5XTX0eOOA" name="GUIShape" specification="_f7JB0E07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSS9lE07EeuDP5XTX0eOOA" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gSS9lU07EeuDP5XTX0eOOA" type="_f7HMoE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>String[] ww = s.split(&quot;,&quot;);
		int co = Integer.parseInt(ww[1]);
		_color = new Color(co);
		_fill = Boolean.parseBoolean(ww[2]);
		_tag = Integer.parseInt(ww[3]);
		init(ww);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSS9lk07EeuDP5XTX0eOOA" name="getShape" specification="_f7JB1U07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSS9l007EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>return _g;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkoE07EeuDP5XTX0eOOA" name="setShape" specification="_gQF-IU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTkoU07EeuDP5XTX0eOOA" name="g" type="_f4hysE07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>_g = g;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkok07EeuDP5XTX0eOOA" name="isFilled" specification="_f7K3Ak07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTko007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return _fill;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkpE07EeuDP5XTX0eOOA" name="setFilled" specification="_f7LeE007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTkpU07EeuDP5XTX0eOOA" name="filled">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>_fill = filled;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkpk07EeuDP5XTX0eOOA" name="getColor" specification="_f7MFIk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTkp007EeuDP5XTX0eOOA" type="_gM_m0E07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>return _color;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkqE07EeuDP5XTX0eOOA" name="setColor" specification="_gQxTmU07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTkqU07EeuDP5XTX0eOOA" name="cl" type="_gM_m0E07EeuDP5XTX0eOOA"/>
          <language>java</language>
          <body>_color = cl;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkqk07EeuDP5XTX0eOOA" name="getTag" specification="_f7MsMk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTkq007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return _tag;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkrE07EeuDP5XTX0eOOA" name="setTag" specification="_f7NTQ007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTkrU07EeuDP5XTX0eOOA" name="tag">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>_tag = tag;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTkrk07EeuDP5XTX0eOOA" name="copy" specification="_f7N6Uk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTkr007EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
          <language>java</language>
          <body>GUI_Shape cp = new GUIShape(this);
		return cp;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTksE07EeuDP5XTX0eOOA" name="toString" specification="_f7N6Vk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTksU07EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>int co = _color.getBlue();
		co += _color.getGreen()*256;
		co += _color.getRed()*256*256;
		String ans = &quot;&quot;+this.getClass().getSimpleName()+&quot;,&quot;+co+&quot;,&quot;+_fill+&quot;,&quot;+_tag+&quot;,&quot;+this._g.getClass().getSimpleName()+&quot;,&quot;+_g;
		return ans;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_gSTksk07EeuDP5XTX0eOOA" name="init" specification="_f7OhY007EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gSTks007EeuDP5XTX0eOOA" name="ww">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gSTktE07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>if(ww[4].contentEquals(&quot;Point2D&quot;)) {_g = new Point2D(ww[5]+&quot;,&quot;+ww[6]);}
		if(ww[4].contentEquals(&quot;Circle2D&quot;)) {
			Point2D cen = new Point2D(ww[5]+&quot;,&quot;+ww[6]);
			double r = Double.parseDouble(ww[7]);
			_g = new Circle2D(cen,r);}
		if(ww[4].contentEquals(&quot;Rect2D&quot;)) {
			Point2D m1 = new Point2D(ww[5]+&quot;,&quot;+ww[6]);
			Point2D m2 = new Point2D(ww[7]+&quot;,&quot;+ww[8]);
			_g = new Rect2D(m1,m2);}
		if(ww[4].contentEquals(&quot;Triangle2D&quot;)) {
			Point2D p1 = new Point2D(ww[5]+&quot;,&quot;+ww[6]);
			Point2D p2 = new Point2D(ww[7]+&quot;,&quot;+ww[8]);
			Point2D p3 = new Point2D(ww[9]+&quot;,&quot;+ww[10]);
			_g = new Triangle2D(p1,p2,p3);}
		if(ww[4].contentEquals(&quot;Segment2D&quot;)) {
			Point2D m1 = new Point2D(ww[5]+&quot;,&quot;+ww[6]);
			Point2D m2 = new Point2D(ww[7]+&quot;,&quot;+ww[8]);
			_g = new Segment2D(m1,m2);}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_f7JB0E07EeuDP5XTX0eOOA" name="GUIShape" method="_gSS9k007EeuDP5XTX0eOOA">
          <eAnnotations xmi:id="_f7JB0k07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_f7JB0007EeuDP5XTX0eOOA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_f7JB0U07EeuDP5XTX0eOOA" name="s">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_f7JB1E07EeuDP5XTX0eOOA" type="_f7HMoE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f7JB1U07EeuDP5XTX0eOOA" name="getShape" method="_gSS9lk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQF-IE07EeuDP5XTX0eOOA" type="_f4hysE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f7K3Ak07EeuDP5XTX0eOOA" name="isFilled" method="_gSTkok07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f7K3A007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f7LeE007EeuDP5XTX0eOOA" name="setFilled" method="_gSTkpE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f7LeFE07EeuDP5XTX0eOOA" name="filled">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f7MFIk07EeuDP5XTX0eOOA" name="getColor" method="_gSTkpk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQxTmE07EeuDP5XTX0eOOA" type="_gM_m0E07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f7MsMk07EeuDP5XTX0eOOA" name="getTag" method="_gSTkqk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f7MsM007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f7NTQ007EeuDP5XTX0eOOA" name="setTag" method="_gSTkrE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f7NTRE07EeuDP5XTX0eOOA" name="tag">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f7N6Uk07EeuDP5XTX0eOOA" name="copy" method="_gSTkrk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQGlM007EeuDP5XTX0eOOA" type="_f2yGQE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_f7N6Vk07EeuDP5XTX0eOOA" name="toString" method="_gSTksE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f7N6V007EeuDP5XTX0eOOA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_f7OhY007EeuDP5XTX0eOOA" name="init" visibility="private" method="_gSTksk07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_f7OhZE07EeuDP5XTX0eOOA" name="ww">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f7OhZU07EeuDP5XTX0eOOA" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_gQFXEE07EeuDP5XTX0eOOA" name="GUIShape" method="_gSS9kE07EeuDP5XTX0eOOA">
          <eAnnotations xmi:id="_gQFXEk07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gQFXE007EeuDP5XTX0eOOA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gQFXEU07EeuDP5XTX0eOOA" name="ot" type="_f7HMoE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gQFXFE07EeuDP5XTX0eOOA" type="_f7HMoE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQF-IU07EeuDP5XTX0eOOA" name="setShape" method="_gSTkoE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQF-Ik07EeuDP5XTX0eOOA" name="g" type="_f4hysE07EeuDP5XTX0eOOA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQxTkE07EeuDP5XTX0eOOA" name="GUIShape" method="_gSSWgk07EeuDP5XTX0eOOA">
          <eAnnotations xmi:id="_gQxTlU07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_gQxTlk07EeuDP5XTX0eOOA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_gQxTkU07EeuDP5XTX0eOOA" name="g" type="_f4hysE07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gQxTkk07EeuDP5XTX0eOOA" name="f">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gQxTk007EeuDP5XTX0eOOA" name="c" type="_gM_m0E07EeuDP5XTX0eOOA"/>
          <ownedParameter xmi:id="_gQxTlE07EeuDP5XTX0eOOA" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_gQxTl007EeuDP5XTX0eOOA" type="_f7HMoE07EeuDP5XTX0eOOA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_gQxTmU07EeuDP5XTX0eOOA" name="setColor" method="_gSTkqE07EeuDP5XTX0eOOA">
          <ownedParameter xmi:id="_gQxTmk07EeuDP5XTX0eOOA" name="cl" type="_gM_m0E07EeuDP5XTX0eOOA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gScukE07EeuDP5XTX0eOOA" name="" memberEnd="_f22XsE07EeuDP5XTX0eOOA _gSdVoE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gSdVoE07EeuDP5XTX0eOOA" name="" type="_f2yGQE07EeuDP5XTX0eOOA" association="_gScukE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gSejwE07EeuDP5XTX0eOOA" name="" memberEnd="_f28eUE07EeuDP5XTX0eOOA _gSejwU07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gSejwU07EeuDP5XTX0eOOA" name="" type="_f2yGQE07EeuDP5XTX0eOOA" association="_gSejwE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTFAsE07EeuDP5XTX0eOOA" name="" memberEnd="_gTFAsU07EeuDP5XTX0eOOA _f2ZEsE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTFAsU07EeuDP5XTX0eOOA" name="" type="_f2WBYE07EeuDP5XTX0eOOA" association="_gTFAsE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTFnwU07EeuDP5XTX0eOOA" name="" memberEnd="_gTFnwk07EeuDP5XTX0eOOA _f3bmgE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTFnwk07EeuDP5XTX0eOOA" name="" type="_f3DzEE07EeuDP5XTX0eOOA" association="_gTFnwU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTGO1E07EeuDP5XTX0eOOA" name="" memberEnd="_gTGO1U07EeuDP5XTX0eOOA _gQ3aME07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTGO1U07EeuDP5XTX0eOOA" name="" type="_f0pYQE07EeuDP5XTX0eOOA" association="_gTGO1E07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTGO1007EeuDP5XTX0eOOA" name="" memberEnd="_gTGO2E07EeuDP5XTX0eOOA _gQ_WAE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTGO2E07EeuDP5XTX0eOOA" name="" type="_f3gfAE07EeuDP5XTX0eOOA" association="_gTGO1007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTG15E07EeuDP5XTX0eOOA" name="" memberEnd="_gTG15U07EeuDP5XTX0eOOA _gRCZUE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTG15U07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTG15E07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTHc8U07EeuDP5XTX0eOOA" name="" memberEnd="_gTHc8k07EeuDP5XTX0eOOA _gRCZUk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTHc8k07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTHc8U07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTHc9E07EeuDP5XTX0eOOA" name="" memberEnd="_gTHc9U07EeuDP5XTX0eOOA _gRCZVE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTHc9U07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTHc9E07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTHc9007EeuDP5XTX0eOOA" name="" memberEnd="_gTHc-E07EeuDP5XTX0eOOA _gRCZVk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTHc-E07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTHc9007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTIEAU07EeuDP5XTX0eOOA" name="" memberEnd="_gTIEAk07EeuDP5XTX0eOOA _gRDAYE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTIEAk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTIEAU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTIEBE07EeuDP5XTX0eOOA" name="" memberEnd="_gTIEBU07EeuDP5XTX0eOOA _gRDAYk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTIEBU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTIEBE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTIEB007EeuDP5XTX0eOOA" name="" memberEnd="_gTIECE07EeuDP5XTX0eOOA _gRDAZE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTIECE07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTIEB007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTIrEU07EeuDP5XTX0eOOA" name="" memberEnd="_gTIrEk07EeuDP5XTX0eOOA _gRDAZk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTIrEk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTIrEU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTIrFE07EeuDP5XTX0eOOA" name="" memberEnd="_gTIrFU07EeuDP5XTX0eOOA _gRDncE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTIrFU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTIrFE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTIrF007EeuDP5XTX0eOOA" name="" memberEnd="_gTIrGE07EeuDP5XTX0eOOA _gRDnck07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTIrGE07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTIrF007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTLHUU07EeuDP5XTX0eOOA" name="" memberEnd="_gTLHUk07EeuDP5XTX0eOOA _gRDndE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTLHUk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTLHUU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTLuYU07EeuDP5XTX0eOOA" name="" memberEnd="_gTLuYk07EeuDP5XTX0eOOA _gRDndk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTLuYk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTLuYU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTLuZE07EeuDP5XTX0eOOA" name="" memberEnd="_gTLuZU07EeuDP5XTX0eOOA _gRDneE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTLuZU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTLuZE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTMVcU07EeuDP5XTX0eOOA" name="" memberEnd="_gTMVck07EeuDP5XTX0eOOA _gREOgU07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTMVck07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTMVcU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTMVdE07EeuDP5XTX0eOOA" name="" memberEnd="_gTMVdU07EeuDP5XTX0eOOA _gREOg007EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTMVdU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTMVdE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTM8gU07EeuDP5XTX0eOOA" name="" memberEnd="_gTM8gk07EeuDP5XTX0eOOA _gREOhU07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTM8gk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTM8gU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTM8hE07EeuDP5XTX0eOOA" name="" memberEnd="_gTM8hU07EeuDP5XTX0eOOA _gREOh007EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTM8hU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTM8hE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTM8h007EeuDP5XTX0eOOA" name="" memberEnd="_gTM8iE07EeuDP5XTX0eOOA _gRFcoE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTM8iE07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTM8h007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTNjkU07EeuDP5XTX0eOOA" name="" memberEnd="_gTNjkk07EeuDP5XTX0eOOA _gRGDsU07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTNjkk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTNjkU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTNjlE07EeuDP5XTX0eOOA" name="" memberEnd="_gTNjlU07EeuDP5XTX0eOOA _gRGDs007EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTNjlU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTNjlE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTNjl007EeuDP5XTX0eOOA" name="" memberEnd="_gTNjmE07EeuDP5XTX0eOOA _gRPNoE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTNjmE07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTNjl007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTOKoU07EeuDP5XTX0eOOA" name="" memberEnd="_gTOKok07EeuDP5XTX0eOOA _gRPNo007EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTOKok07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTOKoU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTOKpE07EeuDP5XTX0eOOA" name="" memberEnd="_gTOKpU07EeuDP5XTX0eOOA _gRP0sE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTOKpU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTOKpE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTOKp007EeuDP5XTX0eOOA" name="" memberEnd="_gTOKqE07EeuDP5XTX0eOOA _gRP0sk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTOKqE07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTOKp007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTOxsU07EeuDP5XTX0eOOA" name="" memberEnd="_gTOxsk07EeuDP5XTX0eOOA _gRP0tE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTOxsk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTOxsU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTOxtE07EeuDP5XTX0eOOA" name="" memberEnd="_gTOxtU07EeuDP5XTX0eOOA _gRQbwE07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTOxtU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTOxtE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTOxt007EeuDP5XTX0eOOA" name="" memberEnd="_gTOxuE07EeuDP5XTX0eOOA _gRQbw007EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTOxuE07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTOxt007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTPYwU07EeuDP5XTX0eOOA" name="" memberEnd="_gTPYwk07EeuDP5XTX0eOOA _gRRC0E07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTPYwk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTPYwU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTPYxE07EeuDP5XTX0eOOA" name="" memberEnd="_gTPYxU07EeuDP5XTX0eOOA _gRSQ8U07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTPYxU07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTPYxE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTQm4E07EeuDP5XTX0eOOA" name="" memberEnd="_gTQm4U07EeuDP5XTX0eOOA _gRS4A007EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTQm4U07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTQm4E07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTR1AU07EeuDP5XTX0eOOA" name="" memberEnd="_gTR1Ak07EeuDP5XTX0eOOA _gRaMwk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTR1Ak07EeuDP5XTX0eOOA" name="" type="_f7HMoE07EeuDP5XTX0eOOA" association="_gTR1AU07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTR1BE07EeuDP5XTX0eOOA" name="" memberEnd="_gTR1BU07EeuDP5XTX0eOOA _gRaz1E07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTR1BU07EeuDP5XTX0eOOA" name="" type="_f7HMoE07EeuDP5XTX0eOOA" association="_gTR1BE07EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTR1B007EeuDP5XTX0eOOA" name="" memberEnd="_gTR1CE07EeuDP5XTX0eOOA _gSi1ME07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTR1CE07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTR1B007EeuDP5XTX0eOOA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_gTScEU07EeuDP5XTX0eOOA" name="" memberEnd="_gTScEk07EeuDP5XTX0eOOA _gSjcQk07EeuDP5XTX0eOOA">
        <ownedEnd xmi:id="_gTScEk07EeuDP5XTX0eOOA" name="" type="_f42i0E07EeuDP5XTX0eOOA" association="_gTScEU07EeuDP5XTX0eOOA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fyD-UE07EeuDP5XTX0eOOA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_fyIPwE07EeuDP5XTX0eOOA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_fyIPwU07EeuDP5XTX0eOOA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_fyI20E07EeuDP5XTX0eOOA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_gOQyIE07EeuDP5XTX0eOOA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_gOT1cE07EeuDP5XTX0eOOA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_fzPDAU07EeuDP5XTX0eOOA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_fzPqEE07EeuDP5XTX0eOOA" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_gPb21E07EeuDP5XTX0eOOA" name="ImageIO"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_fzPqEU07EeuDP5XTX0eOOA" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_gPcd4U07EeuDP5XTX0eOOA" name="ImageIcon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPgIQU07EeuDP5XTX0eOOA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPgvUE07EeuDP5XTX0eOOA" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPgvUk07EeuDP5XTX0eOOA" name="JMenu"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPgvVE07EeuDP5XTX0eOOA" name="JMenuBar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPhWYU07EeuDP5XTX0eOOA" name="JMenuItem"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gPhWY007EeuDP5XTX0eOOA" name="KeyStroke"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_d41L0E07EeuDP5XTX0eOOA">
      <eAnnotations xmi:id="_d49HoE07EeuDP5XTX0eOOA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_d5FqgE07EeuDP5XTX0eOOA" base_Package="_dXgncE07EeuDP5XTX0eOOA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f1dQkE07EeuDP5XTX0eOOA" base_Element="_f1YYEE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f1vkcE07EeuDP5XTX0eOOA" base_Element="_f1YYEE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f1zO0E07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f17xsE07EeuDP5XTX0eOOA" base_Element="_f13gQE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f19m4E07EeuDP5XTX0eOOA" base_Element="_f13gQE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f1-N8E07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f2DtgE07EeuDP5XTX0eOOA" base_Element="_f2BRQE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f2EUkE07EeuDP5XTX0eOOA" base_Element="_f2BRQE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f2Gw0E07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f2lR8E07EeuDP5XTX0eOOA" base_Element="_f2kD0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f2qxgE07EeuDP5XTX0eOOA" base_Element="_f2kD0E07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f2smsE07EeuDP5XTX0eOOA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f2vC8E07EeuDP5XTX0eOOA" base_Element="_f2tNwE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f2vqAE07EeuDP5XTX0eOOA" base_Element="_f2tNwE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f2vqAU07EeuDP5XTX0eOOA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f2wREU07EeuDP5XTX0eOOA" base_Element="_f2wREE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f2w4IE07EeuDP5XTX0eOOA" base_Element="_f2wREE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f2w4IU07EeuDP5XTX0eOOA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f3po8E07EeuDP5XTX0eOOA" base_Element="_f3oa0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f3sFME07EeuDP5XTX0eOOA" base_Element="_f3oa0E07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f3sFMU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f3vIgE07EeuDP5XTX0eOOA" base_Element="_f3ssQE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f3vvkE07EeuDP5XTX0eOOA" base_Element="_f3ssQE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f3wWoE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f312ME07EeuDP5XTX0eOOA" base_Element="_f30oEE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f33EUE07EeuDP5XTX0eOOA" base_Element="_f30oEE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f33EUU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f36HoE07EeuDP5XTX0eOOA" base_Element="_f33rYE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f3780E07EeuDP5XTX0eOOA" base_Element="_f33rYE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f38j4E07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f3_AIE07EeuDP5XTX0eOOA" base_Element="_f39yAE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f3_nME07EeuDP5XTX0eOOA" base_Element="_f39yAE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f3_nMU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4BcYE07EeuDP5XTX0eOOA" base_Element="_f4A1UE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4CqgE07EeuDP5XTX0eOOA" base_Element="_f4A1UE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4CqgU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4FGwE07EeuDP5XTX0eOOA" base_Element="_f4DRkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4GU4E07EeuDP5XTX0eOOA" base_Element="_f4DRkE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4G78E07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4J_QE07EeuDP5XTX0eOOA" base_Element="_f4G78U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4KmUE07EeuDP5XTX0eOOA" base_Element="_f4G78U07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4L0cE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4Pe0E07EeuDP5XTX0eOOA" base_Element="_f4NCkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4RUAE07EeuDP5XTX0eOOA" base_Element="_f4NCkE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4RUAU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_f4qVkE07EeuDP5XTX0eOOA" base_Element="_f4nSQE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4unAU07EeuDP5XTX0eOOA" base_Element="_f4t_8E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4unAk07EeuDP5XTX0eOOA" base_Element="_f4t_8E07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4unA007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4v1IE07EeuDP5XTX0eOOA" base_Element="_f4vOEE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4v1IU07EeuDP5XTX0eOOA" base_Element="_f4vOEE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4v1Ik07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4wcME07EeuDP5XTX0eOOA" base_Element="_f4v1I007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4wcMU07EeuDP5XTX0eOOA" base_Element="_f4v1I007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4wcMk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4wcNU07EeuDP5XTX0eOOA" base_Element="_f4wcM007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4wcNk07EeuDP5XTX0eOOA" base_Element="_f4wcM007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4wcN007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f4xqUE07EeuDP5XTX0eOOA" base_Element="_f4xDQE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f4y4cE07EeuDP5XTX0eOOA" base_Element="_f4xDQE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f4zfgE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_f40toE07EeuDP5XTX0eOOA" base_Element="_f40GkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f40toU07EeuDP5XTX0eOOA" base_Element="_f40GkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f41UsE07EeuDP5XTX0eOOA" base_Element="_f40GkE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f41UsU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f5NIIE07EeuDP5XTX0eOOA" base_Element="_f5JdwE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f5QygE07EeuDP5XTX0eOOA" base_Element="_f5QLcE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Array xmi:id="_f5h4QE07EeuDP5XTX0eOOA" dimensions="1" base_Element="_f5gqIU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6Dcsk07EeuDP5XTX0eOOA" base_Element="_f6DcsE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6Eq0E07EeuDP5XTX0eOOA" base_Element="_f6DcsE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6FR4E07EeuDP5XTX0eOOA" name="Deprecated"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6IVME07EeuDP5XTX0eOOA" base_Element="_f6HHEk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6I8QE07EeuDP5XTX0eOOA" base_Element="_f6HHEk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6I8QU07EeuDP5XTX0eOOA" name="Deprecated"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6lBIE07EeuDP5XTX0eOOA" base_Element="_f6jzB007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6loME07EeuDP5XTX0eOOA" base_Element="_f6jzB007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6loMU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6ndYE07EeuDP5XTX0eOOA" base_Element="_f6m2UE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6ndYU07EeuDP5XTX0eOOA" base_Element="_f6m2UE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6ndYk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6oEcE07EeuDP5XTX0eOOA" base_Element="_f6ndY007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6oEcU07EeuDP5XTX0eOOA" base_Element="_f6ndY007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6oEck07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6orgE07EeuDP5XTX0eOOA" base_Element="_f6oEc007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6orgU07EeuDP5XTX0eOOA" base_Element="_f6oEc007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6orgk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6pSkE07EeuDP5XTX0eOOA" base_Element="_f6org007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6pSkU07EeuDP5XTX0eOOA" base_Element="_f6org007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6pSkk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_f6p5oE07EeuDP5XTX0eOOA" base_Element="_f6pSk007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6qgsE07EeuDP5XTX0eOOA" base_Element="_f6pSk007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6qgsU07EeuDP5XTX0eOOA" base_Element="_f6pSk007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6qgsk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6wAQE07EeuDP5XTX0eOOA" base_Element="_f6vZMk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6wAQU07EeuDP5XTX0eOOA" base_Element="_f6vZMk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6wAQk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6wnUE07EeuDP5XTX0eOOA" base_Element="_f6wAQ007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f6wnUU07EeuDP5XTX0eOOA" base_Element="_f6wAQ007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f6wnUk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6x1cE07EeuDP5XTX0eOOA" base_Element="_f6xOYE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f60RsE07EeuDP5XTX0eOOA" base_Element="_f6xOYE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f60RsU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f61f0E07EeuDP5XTX0eOOA" base_Element="_f604wE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f61f0U07EeuDP5XTX0eOOA" base_Element="_f604wE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f61f0k07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_f62G4E07EeuDP5XTX0eOOA" base_Element="_f61f0007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f62G4U07EeuDP5XTX0eOOA" base_Element="_f61f0007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f62G4k07EeuDP5XTX0eOOA" base_Element="_f61f0007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f62G4007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f62G5k07EeuDP5XTX0eOOA" base_Element="_f62G5E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f62t8E07EeuDP5XTX0eOOA" base_Element="_f62G5E07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f62t8U07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f65KMU07EeuDP5XTX0eOOA" base_Element="_f65KME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f65KMk07EeuDP5XTX0eOOA" base_Element="_f65KME07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f65KM007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f65xQE07EeuDP5XTX0eOOA" base_Element="_f65KNE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f65xQU07EeuDP5XTX0eOOA" base_Element="_f65KNE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f65xQk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f65xRU07EeuDP5XTX0eOOA" base_Element="_f65xQ007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f65xRk07EeuDP5XTX0eOOA" base_Element="_f65xQ007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f65xR007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f66YUE07EeuDP5XTX0eOOA" base_Element="_f65xSE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f66YUU07EeuDP5XTX0eOOA" base_Element="_f65xSE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f66YUk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_f66YVk07EeuDP5XTX0eOOA" base_Element="_f66YU007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f67mcE07EeuDP5XTX0eOOA" base_Element="_f66YU007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f67mcU07EeuDP5XTX0eOOA" base_Element="_f66YU007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f67mck07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f68NgU07EeuDP5XTX0eOOA" base_Element="_f67mc007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f68Ngk07EeuDP5XTX0eOOA" base_Element="_f67mc007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f68Ng007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f6_34E07EeuDP5XTX0eOOA" base_Element="_f6-pwE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7Ae8E07EeuDP5XTX0eOOA" base_Element="_f6-pwE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7Ae8U07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7BGAE07EeuDP5XTX0eOOA" base_Element="_f7Ae8k07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7BtEE07EeuDP5XTX0eOOA" base_Element="_f7Ae8k07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7BtEU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7BtFE07EeuDP5XTX0eOOA" base_Element="_f7BtEk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7CUIE07EeuDP5XTX0eOOA" base_Element="_f7BtEk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7CUIU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7CUI007EeuDP5XTX0eOOA" base_Element="_f7CUIk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7CUJE07EeuDP5XTX0eOOA" base_Element="_f7CUIk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7C7ME07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_f7C7NE07EeuDP5XTX0eOOA" base_Element="_f7C7MU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7DiQE07EeuDP5XTX0eOOA" base_Element="_f7C7MU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7EJUE07EeuDP5XTX0eOOA" base_Element="_f7C7MU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7EJUU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7EwYk07EeuDP5XTX0eOOA" base_Element="_f7EwYE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7FXcE07EeuDP5XTX0eOOA" base_Element="_f7EwYE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7FXcU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7Jo4E07EeuDP5XTX0eOOA" base_Element="_f7JB1U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7K3AE07EeuDP5XTX0eOOA" base_Element="_f7JB1U07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7K3AU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7LeEE07EeuDP5XTX0eOOA" base_Element="_f7K3Ak07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7LeEU07EeuDP5XTX0eOOA" base_Element="_f7K3Ak07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7LeEk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7LeFU07EeuDP5XTX0eOOA" base_Element="_f7LeE007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7MFIE07EeuDP5XTX0eOOA" base_Element="_f7LeE007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7MFIU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7MFI007EeuDP5XTX0eOOA" base_Element="_f7MFIk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7MsME07EeuDP5XTX0eOOA" base_Element="_f7MFIk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7MsMU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7NTQE07EeuDP5XTX0eOOA" base_Element="_f7MsMk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7NTQU07EeuDP5XTX0eOOA" base_Element="_f7MsMk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7NTQk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7NTRU07EeuDP5XTX0eOOA" base_Element="_f7NTQ007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7N6UE07EeuDP5XTX0eOOA" base_Element="_f7NTQ007EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7N6UU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7N6U007EeuDP5XTX0eOOA" base_Element="_f7N6Uk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7N6VE07EeuDP5XTX0eOOA" base_Element="_f7N6Uk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7N6VU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_f7OhYE07EeuDP5XTX0eOOA" base_Element="_f7N6Vk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_f7OhYU07EeuDP5XTX0eOOA" base_Element="_f7N6Vk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_f7OhYk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gNTv4E07EeuDP5XTX0eOOA" base_Element="_gM_m0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gN_sYE07EeuDP5XTX0eOOA" base_Element="_gN6M0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gOFL8E07EeuDP5XTX0eOOA" base_Element="_gN6M0E07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gOFzAE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gOTOYE07EeuDP5XTX0eOOA" base_Element="_gOQyIE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gOVDkE07EeuDP5XTX0eOOA" base_Element="_gOT1cE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gOhQ0E07EeuDP5XTX0eOOA" base_Element="_gOeNgE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gOmJUE07EeuDP5XTX0eOOA" base_Element="_gOk7ME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gOmwYE07EeuDP5XTX0eOOA" base_Element="_gOmJUU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gOs3AE07EeuDP5XTX0eOOA" base_Element="_gOnXcE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gOwhYE07EeuDP5XTX0eOOA" base_Element="_gOteEE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gO2A8E07EeuDP5XTX0eOOA" base_Element="_gO0y0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gO2oAE07EeuDP5XTX0eOOA" base_Element="_gO0y0E07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gO3PEE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gO32IU07EeuDP5XTX0eOOA" base_Element="_gO3PEU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gO32Ik07EeuDP5XTX0eOOA" base_Element="_gO3PEU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gO32I007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gO6SYk07EeuDP5XTX0eOOA" base_Element="_gO5rUE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gO65cE07EeuDP5XTX0eOOA" base_Element="_gO5rUE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gO65cU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gO_x8U07EeuDP5XTX0eOOA" base_Element="_gO_K4E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gPAZAE07EeuDP5XTX0eOOA" base_Element="_gO_K4E07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gPAZAU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gPBnIE07EeuDP5XTX0eOOA" base_Element="_gPBAEE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gPBnIU07EeuDP5XTX0eOOA" base_Element="_gPBAEE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gPBnIk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_gPFRgE07EeuDP5XTX0eOOA" base_Element="_gPEDYE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPHtwE07EeuDP5XTX0eOOA" base_Element="_gPF4kE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPI74E07EeuDP5XTX0eOOA" base_Element="_gPIU0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPLYIE07EeuDP5XTX0eOOA" base_Element="_gPJi8E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPL_MU07EeuDP5XTX0eOOA" base_Element="_gPL_ME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPQ3sE07EeuDP5XTX0eOOA" base_Element="_gPMmQE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPSF0E07EeuDP5XTX0eOOA" base_Element="_gPQ3sU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPSF0k07EeuDP5XTX0eOOA" base_Element="_gPSF0U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPSs4E07EeuDP5XTX0eOOA" base_Element="_gPSF0007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPT7AE07EeuDP5XTX0eOOA" base_Element="_gPTT8E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPUiEU07EeuDP5XTX0eOOA" base_Element="_gPUiEE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPVJIU07EeuDP5XTX0eOOA" base_Element="_gPVJIE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPWXQE07EeuDP5XTX0eOOA" base_Element="_gPVJIk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPW-UE07EeuDP5XTX0eOOA" base_Element="_gPWXQU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPW-Uk07EeuDP5XTX0eOOA" base_Element="_gPW-UU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPXlYE07EeuDP5XTX0eOOA" base_Element="_gPW-U007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPXlYk07EeuDP5XTX0eOOA" base_Element="_gPXlYU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPYMcE07EeuDP5XTX0eOOA" base_Element="_gPXlY007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPYzgE07EeuDP5XTX0eOOA" base_Element="_gPYMcU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPYzgk07EeuDP5XTX0eOOA" base_Element="_gPYzgU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPZakE07EeuDP5XTX0eOOA" base_Element="_gPYzg007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPZakk07EeuDP5XTX0eOOA" base_Element="_gPZakU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPaBoE07EeuDP5XTX0eOOA" base_Element="_gPZak007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPaBok07EeuDP5XTX0eOOA" base_Element="_gPaBoU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPaosU07EeuDP5XTX0eOOA" base_Element="_gPaosE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPbPwE07EeuDP5XTX0eOOA" base_Element="_gPaosk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPbPwk07EeuDP5XTX0eOOA" base_Element="_gPbPwU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPbPxE07EeuDP5XTX0eOOA" base_Element="_gPbPw007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPb20U07EeuDP5XTX0eOOA" base_Element="_gPb20E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPb20007EeuDP5XTX0eOOA" base_Element="_gPb20k07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPcd4E07EeuDP5XTX0eOOA" base_Element="_gPb21E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPgIQE07EeuDP5XTX0eOOA" base_Element="_gPcd4U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPgIQk07EeuDP5XTX0eOOA" base_Element="_gPgIQU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPgvUU07EeuDP5XTX0eOOA" base_Element="_gPgvUE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPgvU007EeuDP5XTX0eOOA" base_Element="_gPgvUk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPhWYE07EeuDP5XTX0eOOA" base_Element="_gPgvVE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPhWYk07EeuDP5XTX0eOOA" base_Element="_gPhWYU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gPh9cE07EeuDP5XTX0eOOA" base_Element="_gPhWY007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gP6_BE07EeuDP5XTX0eOOA" base_Element="_gP6_AU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gP7mEE07EeuDP5XTX0eOOA" base_Element="_gP6_AU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gP7mEU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gP8NIk07EeuDP5XTX0eOOA" base_Element="_gP8NIE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gP8NI007EeuDP5XTX0eOOA" base_Element="_gP8NIE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gP8NJE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gP-CUE07EeuDP5XTX0eOOA" base_Element="_gP9bRk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gP-CUU07EeuDP5XTX0eOOA" base_Element="_gP9bRk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gP-CUk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gP-CVk07EeuDP5XTX0eOOA" base_Element="_gP-CVE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gP-CV007EeuDP5XTX0eOOA" base_Element="_gP-CVE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gP-CWE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQAekU07EeuDP5XTX0eOOA" base_Element="_gP_3gk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQAekk07EeuDP5XTX0eOOA" base_Element="_gP_3gk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQAek007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQBssE07EeuDP5XTX0eOOA" base_Element="_gQAelU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQCTwE07EeuDP5XTX0eOOA" base_Element="_gQAelU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQCTwU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQDh6k07EeuDP5XTX0eOOA" base_Element="_gQDh5007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQEI8E07EeuDP5XTX0eOOA" base_Element="_gQDh5007EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQEI8U07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQEI9U07EeuDP5XTX0eOOA" base_Element="_gQEI8007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQEI9k07EeuDP5XTX0eOOA" base_Element="_gQEI8007EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQEI9007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQGlME07EeuDP5XTX0eOOA" base_Element="_gQF-IU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQGlMU07EeuDP5XTX0eOOA" base_Element="_gQF-IU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQGlMk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gQSLYE07EeuDP5XTX0eOOA" genericsValue="GUI_Shape" base_Element="_gQRkUU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQUAkk07EeuDP5XTX0eOOA" base_Element="_gQUAkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQUnoE07EeuDP5XTX0eOOA" base_Element="_gQUAkE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQUnoU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_gQVOsE07EeuDP5XTX0eOOA" genericsValue="GUI_Shape" base_Element="_gQUnok07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gQY5EE07EeuDP5XTX0eOOA" base_Element="_gQYSAU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQbVUk07EeuDP5XTX0eOOA" base_Element="_gQbVUE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQbVU007EeuDP5XTX0eOOA" base_Element="_gQbVUE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQbVVE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQb8YE07EeuDP5XTX0eOOA" base_Element="_gQbVVU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQb8YU07EeuDP5XTX0eOOA" base_Element="_gQbVVU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQb8Yk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQb8ZU07EeuDP5XTX0eOOA" base_Element="_gQb8Y007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQb8Zk07EeuDP5XTX0eOOA" base_Element="_gQb8Y007EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQb8Z007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQcjcE07EeuDP5XTX0eOOA" base_Element="_gQb8aE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQcjcU07EeuDP5XTX0eOOA" base_Element="_gQb8aE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQcjck07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQcjdU07EeuDP5XTX0eOOA" base_Element="_gQcjc007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQcjdk07EeuDP5XTX0eOOA" base_Element="_gQcjc007EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQcjd007EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQdKgE07EeuDP5XTX0eOOA" base_Element="_gQcjeE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQdKgU07EeuDP5XTX0eOOA" base_Element="_gQcjeE07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQdKgk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQdxkE07EeuDP5XTX0eOOA" base_Element="_gQdKg007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQdxkU07EeuDP5XTX0eOOA" base_Element="_gQdKg007EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQeYoE07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQeYo007EeuDP5XTX0eOOA" base_Element="_gQeYoU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQeYpE07EeuDP5XTX0eOOA" base_Element="_gQeYoU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQeYpU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQe_sE07EeuDP5XTX0eOOA" base_Element="_gQeYpk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQe_sU07EeuDP5XTX0eOOA" base_Element="_gQeYpk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQe_sk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQe_tU07EeuDP5XTX0eOOA" base_Element="_gQe_s007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQfmwE07EeuDP5XTX0eOOA" base_Element="_gQe_s007EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQfmwU07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQfmxE07EeuDP5XTX0eOOA" base_Element="_gQfmwk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQfmxU07EeuDP5XTX0eOOA" base_Element="_gQfmwk07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQfmxk07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQyhsE07EeuDP5XTX0eOOA" base_Element="_gQxTmU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Annotations xmi:id="_gQzv0E07EeuDP5XTX0eOOA" base_Element="_gQxTmU07EeuDP5XTX0eOOA">
    <annotations xmi:id="_gQ0W4E07EeuDP5XTX0eOOA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQ5PYE07EeuDP5XTX0eOOA" base_Element="_gQ3aME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gQ6dgE07EeuDP5XTX0eOOA" base_Property="_gQ5PYU07EeuDP5XTX0eOOA" siblings="_gSXPAU07EeuDP5XTX0eOOA _gSX2Ek07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQ7EkE07EeuDP5XTX0eOOA" base_Element="_gQ5PYU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gQ85wU07EeuDP5XTX0eOOA" base_Property="_gQ8SsE07EeuDP5XTX0eOOA" siblings="_gSZEME07EeuDP5XTX0eOOA _gSZrQk07EeuDP5XTX0eOOA _gSZrRk07EeuDP5XTX0eOOA _gSZrSk07EeuDP5XTX0eOOA _gSaSUk07EeuDP5XTX0eOOA _gSaSVk07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQ85wk07EeuDP5XTX0eOOA" base_Element="_gQ8SsE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gQ-H4E07EeuDP5XTX0eOOA" base_Property="_gQ9g0E07EeuDP5XTX0eOOA" siblings="_gSaSWk07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQ-H4U07EeuDP5XTX0eOOA" base_Element="_gQ9g0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Generics xmi:id="_gQ_9EE07EeuDP5XTX0eOOA" genericsValue="GUI_Shape" base_Element="_gQ_WAE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gQ_9EU07EeuDP5XTX0eOOA" base_Element="_gQ_WAE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRAkIU07EeuDP5XTX0eOOA" base_Element="_gRAkIE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRBLMU07EeuDP5XTX0eOOA" base_Element="_gRBLME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRBLM007EeuDP5XTX0eOOA" base_Element="_gRBLMk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gRE1kE07EeuDP5XTX0eOOA" base_Property="_gREOiU07EeuDP5XTX0eOOA" siblings="_gSfK2007EeuDP5XTX0eOOA _gSfx4007EeuDP5XTX0eOOA _gSgY8E07EeuDP5XTX0eOOA _gSgY9E07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRE1kU07EeuDP5XTX0eOOA" base_Element="_gREOiU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRGqwE07EeuDP5XTX0eOOA" base_Element="_gRGDs007EeuDP5XTX0eOOA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_gRIf8E07EeuDP5XTX0eOOA" name="getPenColor" isStatic="true" method="_gSACoE07EeuDP5XTX0eOOA">
      <ownedParameter xmi:id="_gRKVIE07EeuDP5XTX0eOOA" type="_gM_m0E07EeuDP5XTX0eOOA" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_gRJuEE07EeuDP5XTX0eOOA" name="setPenColor" isStatic="true" method="_gSBQwU07EeuDP5XTX0eOOA">
      <ownedParameter xmi:id="_gRJuEU07EeuDP5XTX0eOOA" name="red">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
      <ownedParameter xmi:id="_gRJuEk07EeuDP5XTX0eOOA" name="green">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
      <ownedParameter xmi:id="_gRJuE007EeuDP5XTX0eOOA" name="blue">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRMKUE07EeuDP5XTX0eOOA" base_Element="_gRLjQE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRMxYE07EeuDP5XTX0eOOA" base_Element="_gRMKUU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRMxZE07EeuDP5XTX0eOOA" base_Element="_gRMxY007EeuDP5XTX0eOOA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_gRNYcE07EeuDP5XTX0eOOA" name="getPenRadius" isStatic="true" method="_gSCe4E07EeuDP5XTX0eOOA">
      <ownedParameter xmi:id="_gRNYck07EeuDP5XTX0eOOA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_gRNYcU07EeuDP5XTX0eOOA" name="setPenRadius" isStatic="true" method="_gSDF8U07EeuDP5XTX0eOOA"/>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRN_gk07EeuDP5XTX0eOOA" base_Element="_gRN_gE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gROml007EeuDP5XTX0eOOA" base_Property="_gROmlk07EeuDP5XTX0eOOA" siblings="_gShAAE07EeuDP5XTX0eOOA _gSiOIE07EeuDP5XTX0eOOA _gSiOI007EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gROmmE07EeuDP5XTX0eOOA" base_Element="_gROmlk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRPNok07EeuDP5XTX0eOOA" base_Element="_gRPNoE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRPNpU07EeuDP5XTX0eOOA" base_Element="_gRPNo007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRP0s007EeuDP5XTX0eOOA" base_Element="_gRP0sk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gRP0tU07EeuDP5XTX0eOOA" base_Property="_gRP0tE07EeuDP5XTX0eOOA" siblings="_gSi1ME07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRP0tk07EeuDP5XTX0eOOA" base_Element="_gRP0tE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gRQbwU07EeuDP5XTX0eOOA" base_Property="_gRQbwE07EeuDP5XTX0eOOA" siblings="_gSjcQk07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRQbwk07EeuDP5XTX0eOOA" base_Element="_gRQbwE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRQbxU07EeuDP5XTX0eOOA" base_Element="_gRQbw007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRRC0U07EeuDP5XTX0eOOA" base_Element="_gRRC0E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRRC1E07EeuDP5XTX0eOOA" base_Element="_gRRC0k07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRRp4E07EeuDP5XTX0eOOA" base_Element="_gRRC1U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRSQ8E07EeuDP5XTX0eOOA" base_Element="_gRRp4U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Generics xmi:id="_gRS4AE07EeuDP5XTX0eOOA" genericsValue="Character" base_Element="_gRSQ8U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRS4Ak07EeuDP5XTX0eOOA" base_Element="_gRSQ8U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Generics xmi:id="_gRTfEE07EeuDP5XTX0eOOA" genericsValue="Integer" base_Element="_gRS4A007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRTfEk07EeuDP5XTX0eOOA" base_Element="_gRS4A007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gRXJcU07EeuDP5XTX0eOOA" base_Property="_gRWiYE07EeuDP5XTX0eOOA" siblings="_gSmfkE07EeuDP5XTX0eOOA _gSmflE07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRXJck07EeuDP5XTX0eOOA" base_Element="_gRWiYE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gRXwg007EeuDP5XTX0eOOA" base_Property="_gRXwgk07EeuDP5XTX0eOOA" siblings="_gSnGoE07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRXwhE07EeuDP5XTX0eOOA" base_Element="_gRXwgk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gRYXkU07EeuDP5XTX0eOOA" base_Property="_gRYXkE07EeuDP5XTX0eOOA" siblings="_gSnGpU07EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRY-oE07EeuDP5XTX0eOOA" base_Element="_gRYXkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gRY-ok07EeuDP5XTX0eOOA" base_Property="_gRY-oU07EeuDP5XTX0eOOA" siblings="_gSnts007EeuDP5XTX0eOOA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRY-o007EeuDP5XTX0eOOA" base_Element="_gRY-oU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Array xmi:id="_gRaMwE07EeuDP5XTX0eOOA" base_Element="_gRZlsE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRaMwU07EeuDP5XTX0eOOA" base_Element="_gRZlsE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRaz0U07EeuDP5XTX0eOOA" base_Element="_gRaMwk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRaz0007EeuDP5XTX0eOOA" base_Element="_gRaz0k07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRaz1U07EeuDP5XTX0eOOA" base_Element="_gRaz1E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gRba4E07EeuDP5XTX0eOOA" base_Element="_gRaz1k07EeuDP5XTX0eOOA"/>
  <uml:OpaqueBehavior xmi:id="_gSACoE07EeuDP5XTX0eOOA" name="getPenColor" specification="_gRIf8E07EeuDP5XTX0eOOA">
    <ownedParameter xmi:id="_gSBQwE07EeuDP5XTX0eOOA" type="_gM_m0E07EeuDP5XTX0eOOA" direction="return"/>
    <language>java</language>
    <body>return penColor;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_gSBQwU07EeuDP5XTX0eOOA" name="setPenColor" specification="_gRJuEE07EeuDP5XTX0eOOA">
    <ownedParameter xmi:id="_gSBQwk07EeuDP5XTX0eOOA" name="red">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_gSBQw007EeuDP5XTX0eOOA" name="green">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_gSBQxE07EeuDP5XTX0eOOA" name="blue">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>if (red   &lt; 0 || red   >= 256) throw new IllegalArgumentException(&quot;amount of red must be between 0 and 255&quot;);
		if (green &lt; 0 || green >= 256) throw new IllegalArgumentException(&quot;amount of green must be between 0 and 255&quot;);
		if (blue  &lt; 0 || blue  >= 256) throw new IllegalArgumentException(&quot;amount of blue must be between 0 and 255&quot;);
		setPenColor(new Color(red, green, blue));
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_gSCe4E07EeuDP5XTX0eOOA" name="getPenRadius" specification="_gRNYcE07EeuDP5XTX0eOOA">
    <ownedParameter xmi:id="_gSDF8E07EeuDP5XTX0eOOA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>return penRadius;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_gSDF8U07EeuDP5XTX0eOOA" name="setPenRadius" specification="_gRNYcU07EeuDP5XTX0eOOA">
    <language>java</language>
    <body>setPenRadius(DEFAULT_PEN_RADIUS);
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSXPAk07EeuDP5XTX0eOOA" base_Property="_gSXPAU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSX2EE07EeuDP5XTX0eOOA" base_Element="_gSXPAU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSX2E007EeuDP5XTX0eOOA" base_Property="_gSX2Ek07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSYdIE07EeuDP5XTX0eOOA" base_Element="_gSX2Ek07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSZEMU07EeuDP5XTX0eOOA" base_Property="_gSZEME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSZrQE07EeuDP5XTX0eOOA" base_Element="_gSZEME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSZrQ007EeuDP5XTX0eOOA" base_Property="_gSZrQk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSZrRE07EeuDP5XTX0eOOA" base_Element="_gSZrQk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSZrR007EeuDP5XTX0eOOA" base_Property="_gSZrRk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSZrSE07EeuDP5XTX0eOOA" base_Element="_gSZrRk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSZrS007EeuDP5XTX0eOOA" base_Property="_gSZrSk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSaSUE07EeuDP5XTX0eOOA" base_Element="_gSZrSk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSaSU007EeuDP5XTX0eOOA" base_Property="_gSaSUk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSaSVE07EeuDP5XTX0eOOA" base_Element="_gSaSUk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSaSV007EeuDP5XTX0eOOA" base_Property="_gSaSVk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSaSWE07EeuDP5XTX0eOOA" base_Element="_gSaSVk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSaSW007EeuDP5XTX0eOOA" base_Property="_gSaSWk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSaSXE07EeuDP5XTX0eOOA" base_Element="_gSaSWk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSfx4E07EeuDP5XTX0eOOA" base_Property="_gSfK2007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSfx4U07EeuDP5XTX0eOOA" base_Element="_gSfK2007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSfx5E07EeuDP5XTX0eOOA" base_Property="_gSfx4007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSfx5U07EeuDP5XTX0eOOA" base_Element="_gSfx4007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSgY8U07EeuDP5XTX0eOOA" base_Property="_gSgY8E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSgY8k07EeuDP5XTX0eOOA" base_Element="_gSgY8E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSgY9U07EeuDP5XTX0eOOA" base_Property="_gSgY9E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSgY9k07EeuDP5XTX0eOOA" base_Element="_gSgY9E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gShnEE07EeuDP5XTX0eOOA" base_Property="_gShAAE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gShnEU07EeuDP5XTX0eOOA" base_Element="_gShAAE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSiOIU07EeuDP5XTX0eOOA" base_Property="_gSiOIE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSiOIk07EeuDP5XTX0eOOA" base_Element="_gSiOIE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSiOJE07EeuDP5XTX0eOOA" base_Property="_gSiOI007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSiOJU07EeuDP5XTX0eOOA" base_Element="_gSiOI007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSjcQE07EeuDP5XTX0eOOA" base_Property="_gSi1ME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSjcQU07EeuDP5XTX0eOOA" base_Element="_gSi1ME07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSjcQ007EeuDP5XTX0eOOA" base_Property="_gSjcQk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSjcRE07EeuDP5XTX0eOOA" base_Element="_gSjcQk07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSmfkU07EeuDP5XTX0eOOA" base_Property="_gSmfkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSmfkk07EeuDP5XTX0eOOA" base_Element="_gSmfkE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSmflU07EeuDP5XTX0eOOA" base_Property="_gSmflE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSmflk07EeuDP5XTX0eOOA" base_Element="_gSmflE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSnGoU07EeuDP5XTX0eOOA" base_Property="_gSnGoE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSnGok07EeuDP5XTX0eOOA" base_Element="_gSnGoE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSntsE07EeuDP5XTX0eOOA" base_Property="_gSnGpU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSntsU07EeuDP5XTX0eOOA" base_Element="_gSnGpU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_gSnttE07EeuDP5XTX0eOOA" base_Property="_gSnts007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_gSnttU07EeuDP5XTX0eOOA" base_Element="_gSnts007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTFnwE07EeuDP5XTX0eOOA" base_Element="_gTFAsE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTGO0E07EeuDP5XTX0eOOA" base_Element="_gTFnwU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTGO0007EeuDP5XTX0eOOA" base_Element="_gTGO0U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTGO1k07EeuDP5XTX0eOOA" base_Element="_gTGO1E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTG14E07EeuDP5XTX0eOOA" base_Element="_gTGO1007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTG14007EeuDP5XTX0eOOA" base_Element="_gTG14U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTHc8E07EeuDP5XTX0eOOA" base_Element="_gTG15E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTHc8007EeuDP5XTX0eOOA" base_Element="_gTHc8U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTHc9k07EeuDP5XTX0eOOA" base_Element="_gTHc9E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTIEAE07EeuDP5XTX0eOOA" base_Element="_gTHc9007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTIEA007EeuDP5XTX0eOOA" base_Element="_gTIEAU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTIEBk07EeuDP5XTX0eOOA" base_Element="_gTIEBE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTIrEE07EeuDP5XTX0eOOA" base_Element="_gTIEB007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTIrE007EeuDP5XTX0eOOA" base_Element="_gTIrEU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTIrFk07EeuDP5XTX0eOOA" base_Element="_gTIrFE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTLHUE07EeuDP5XTX0eOOA" base_Element="_gTIrF007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTLuYE07EeuDP5XTX0eOOA" base_Element="_gTLHUU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTLuY007EeuDP5XTX0eOOA" base_Element="_gTLuYU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTMVcE07EeuDP5XTX0eOOA" base_Element="_gTLuZE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTMVc007EeuDP5XTX0eOOA" base_Element="_gTMVcU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTM8gE07EeuDP5XTX0eOOA" base_Element="_gTMVdE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTM8g007EeuDP5XTX0eOOA" base_Element="_gTM8gU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTM8hk07EeuDP5XTX0eOOA" base_Element="_gTM8hE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTNjkE07EeuDP5XTX0eOOA" base_Element="_gTM8h007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTNjk007EeuDP5XTX0eOOA" base_Element="_gTNjkU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTNjlk07EeuDP5XTX0eOOA" base_Element="_gTNjlE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTOKoE07EeuDP5XTX0eOOA" base_Element="_gTNjl007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTOKo007EeuDP5XTX0eOOA" base_Element="_gTOKoU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTOKpk07EeuDP5XTX0eOOA" base_Element="_gTOKpE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTOxsE07EeuDP5XTX0eOOA" base_Element="_gTOKp007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTOxs007EeuDP5XTX0eOOA" base_Element="_gTOxsU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTOxtk07EeuDP5XTX0eOOA" base_Element="_gTOxtE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTPYwE07EeuDP5XTX0eOOA" base_Element="_gTOxt007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTPYw007EeuDP5XTX0eOOA" base_Element="_gTPYwU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTPYxk07EeuDP5XTX0eOOA" base_Element="_gTPYxE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTQm4k07EeuDP5XTX0eOOA" base_Element="_gTQm4E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTQm5U07EeuDP5XTX0eOOA" base_Element="_gTQm4007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTRN8E07EeuDP5XTX0eOOA" base_Element="_gTQm5k07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTRN8007EeuDP5XTX0eOOA" base_Element="_gTRN8U07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTR1AE07EeuDP5XTX0eOOA" base_Element="_gTRN9E07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTR1A007EeuDP5XTX0eOOA" base_Element="_gTR1AU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTR1Bk07EeuDP5XTX0eOOA" base_Element="_gTR1BE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTScEE07EeuDP5XTX0eOOA" base_Element="_gTR1B007EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTScE007EeuDP5XTX0eOOA" base_Element="_gTScEU07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTScFk07EeuDP5XTX0eOOA" base_Element="_gTScFE07EeuDP5XTX0eOOA"/>
  <UMLLabProfile:Reference xmi:id="_gTTDIE07EeuDP5XTX0eOOA" base_Element="_gTScF007EeuDP5XTX0eOOA"/>
</xmi:XMI>
